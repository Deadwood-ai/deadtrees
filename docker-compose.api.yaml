services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    restart: unless-stopped
    ports:
      - 127.0.0.1:40831:40831
      # - 2222:22  # Expose SSH port
    volumes:
      - /data:/data
      - ./assets/gadm/gadm_410.gpkg:/gadm_data/gadm_410.gpkg
      - ~/.ssh/authorized_keys:/home/dendro/.ssh/authorized_keys:ro
    
    healthcheck:
      test: curl --fail http://127.0.0.1:40831/ || exit 1
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m30s
      start_interval: 1s

    environment:
      BASE_DIR: /data
      PYTHONPATH: /app
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      DEV_MODE: false
      GADM_DATA_PATH: /gadm_data/gadm_410.gpkg
      UVICORN_ROOT_PATH: /api/v1
      UVICORN_PORT: 40831
      UVICORN_HOST: 0.0.0.0
      LOGFIRE_TOKEN: ${LOGFIRE_TOKEN}
      # Reference export configuration
      REFERENCE_EXPORT_UUID: ${REFERENCE_EXPORT_UUID}
      NGINX_COG_URL: ${NGINX_COG_URL}
      DEADTREES_USER: ${DEADTREES_USER}
      DEADTREES_PASSWORD: ${DEADTREES_PASSWORD}

    # command: python run.py server --reload=False

  nginx:
    build:
      context: ./nginx/api-conf
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 2222:22  # Expose SSH port (optional)

    links:
      - api
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'service', 'nginx', 'status']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 1m30s
      start_interval: 1s

    volumes:
      - ./nginx/api-conf:/etc/nginx/conf.d/:ro
      - /data:/data/:rw
      - ./nginx/logs:/var/log/nginx
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/nginx/ssl/:ro
      - ~/.ssh:/root/.ssh:ro  # Mount the host's SSH directory
  
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt:rw
    depends_on:
      - nginx

# volumes:
  # nginx_ssh:  # Define the volume for SSH keys
        