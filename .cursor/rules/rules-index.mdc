---
alwaysApply: true
---

# Rules Index

Available workspace rules under `.cursor/rules/`:

- `processor-pipeline.mdc`: **CRITICAL** - Always applied - Processor order of operations, file flow, standardization logic
- `security-constraints.mdc`: **CRITICAL** - Never SSH without consent, MCP-only database access
- `deployment-architecture.mdc`: **CRITICAL** - Production architecture, machine separation, named volumes
- `development-workflow.mdc`: CLI-first dev/test workflow, ports, troubleshooting
- `code-map.mdc`: High-level map of modules and key files
- `env-and-ports.mdc`: Services, ports, environment variables
- `assets-and-paths.mdc`: Asset locations, settings-derived paths
- `odm-processing.mdc`: Requirements, patterns, tar streaming bug for ODM
- `treecover-segmentation.mdc`: Using and debugging treecover segmentation
- `upload-and-chunking.mdc`: Dataset creation and chunk upload flow
- `collaboration.mdc`: Session preferences and guardrails
- `testing-policy.mdc`: Sync tests, no new class-based tests, CLI usage
- `project-structure.mdc`: Module organization and file placement
- `code-standards.mdc`: Programming standards and patterns
- `data-debugging.mdc`: Dataset investigation and debugging
- `database-mcp.mdc`: Database operations and MCP tools
- `github.mdc`: GitHub CLI and workflows

## Critical Rules for New Agents

**Must read first:**
1. `processor-pipeline.mdc` - **CRITICAL** - Processing order, file flow, why standardized file isn't pushed back
2. `security-constraints.mdc` - **NEVER SSH without consent, ALWAYS use MCP for database**
3. `deployment-architecture.mdc` - Understanding production vs test, machine separation
4. `code-map.mdc` - Where functionality lives
5. `development-workflow.mdc` - How to run tests and debug

**For specific tasks:**
- Understanding processor flow → `processor-pipeline.mdc` (always applied)
- Working with ODM → `odm-processing.mdc`
- Working with treecover → `treecover-segmentation.mdc`
- Data transfer issues → `deployment-architecture.mdc`
- Testing → `testing-policy.mdc` + `development-workflow.mdc`
- Debugging datasets → `data-debugging.mdc` + `debug-dataset.md` command

If something is missing or unclear, ask clarifying questions before proceeding.
