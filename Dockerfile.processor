# Use NVIDIA CUDA base image with Python 3.12
FROM nvidia/cuda:12.3.1-runtime-ubuntu22.04

# Install Python 3.12 and curl
RUN apt-get update && apt-get install -y \
    software-properties-common \
    curl \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python3.12 \
    python3.12-distutils \
    python3-pip \
    tzdata \
    && ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime \
    && dpkg-reconfigure -f noninteractive tzdata

# Install OpenGL and other required libraries
RUN apt-get update && apt-get install -y \
    openssh-server \
    gdal-bin \
    libgdal-dev \
    libgl1-mesa-glx \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.12 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.12 1 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1

# Install pip for Python 3.12 properly
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12 && \
    python3.12 -m pip install --upgrade pip setuptools wheel

# Install requirements
COPY requirements.txt requirements.txt
RUN python3.12 -m pip install -r requirements.txt && \
    rm requirements.txt

# create a folder for the application
RUN mkdir -p /app/src
COPY ./src /app/src
COPY ./run.py /app/run.py
COPY ./src/deadwood_segmentation/model.safetensors /app/src/deadwood_segmentation/model.safetensors

# set the working directory
WORKDIR /app

# run the application
#CMD ["uvicorn", "src.app:app", "--host", "0.0.0.0", "--port", "8000", "--proxy-headers"]
CMD ["python", "run.py", "start-queue"]