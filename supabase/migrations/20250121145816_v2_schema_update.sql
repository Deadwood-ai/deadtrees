create type "public"."v2_status" as enum ('idle', 'uploading', 'ortho_processing', 'cog_processing', 'thumbnail_processing', 'deadwood_segmentation', 'forest_cover_segmentation', 'audit_in_progress');

create table "public"."v2_cogs" (
    "dataset_id" bigint not null,
    "file_size" bigint not null,
    "cog_file_name" text not null,
    "version" integer not null,
    "created_at" timestamp with time zone not null default now(),
    "cog_info" jsonb,
    "cog_processing_runtime" double precision,
    "cog_path" text not null
);


alter table "public"."v2_cogs" enable row level security;

create table "public"."v2_datasets" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "file_name" text not null,
    "license" "License" not null,
    "platform" "Platform" not null,
    "project_id" text,
    "authors" text[],
    "aquisition_year" smallint,
    "aquisition_month" smallint,
    "aquisition_day" smallint,
    "additional_information" text,
    "data_access" access not null default 'public'::access,
    "citation_doi" text
);


alter table "public"."v2_datasets" enable row level security;

create table "public"."v2_orthos" (
    "dataset_id" bigint not null,
    "ortho_file_name" text not null,
    "version" integer not null,
    "created_at" timestamp with time zone not null default now(),
    "file_size" bigint not null,
    "bbox" box2d,
    "sha256" text,
    "ortho_info" jsonb,
    "ortho_upload_runtime" double precision,
    "ortho_processing" boolean not null default false,
    "ortho_processed" boolean not null default false,
    "ortho_processing_runtime" double precision
);


alter table "public"."v2_orthos" enable row level security;

create table "public"."v2_statuses" (
    "id" bigint generated by default as identity not null,
    "dataset_id" bigint not null,
    "current_status" v2_status not null default 'idle'::v2_status,
    "is_upload_done" boolean not null default false,
    "is_ortho_done" boolean not null default false,
    "is_cog_done" boolean not null default false,
    "is_thumbnail_done" boolean not null default false,
    "is_deadwood_done" boolean not null default false,
    "is_forest_cover_done" boolean not null default false,
    "is_audited" boolean not null default false,
    "has_error" boolean not null default false,
    "error_message" text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."v2_statuses" enable row level security;

create table "public"."v2_thumbnails" (
    "dataset_id" bigint not null,
    "file_size" bigint not null,
    "thumbnail_file_name" text not null,
    "thumbnail_path" text not null,
    "version" integer not null,
    "created_at" timestamp with time zone not null default now(),
    "thumbnail_processing_runtime" double precision
);


alter table "public"."v2_thumbnails" enable row level security;

CREATE UNIQUE INDEX v2_cogs_pkey ON public.v2_cogs USING btree (dataset_id);

CREATE INDEX v2_datasets_created_at_idx ON public.v2_datasets USING btree (created_at);

CREATE UNIQUE INDEX v2_datasets_pkey ON public.v2_datasets USING btree (id);

CREATE INDEX v2_datasets_user_id_idx ON public.v2_datasets USING btree (user_id);

CREATE UNIQUE INDEX v2_orthos_pkey ON public.v2_orthos USING btree (dataset_id);

CREATE INDEX v2_statuses_dataset_id_idx ON public.v2_statuses USING btree (dataset_id);

CREATE UNIQUE INDEX v2_statuses_pkey ON public.v2_statuses USING btree (id);

CREATE UNIQUE INDEX v2_thumbnails_pkey ON public.v2_thumbnails USING btree (dataset_id);

alter table "public"."v2_cogs" add constraint "v2_cogs_pkey" PRIMARY KEY using index "v2_cogs_pkey";

alter table "public"."v2_datasets" add constraint "v2_datasets_pkey" PRIMARY KEY using index "v2_datasets_pkey";

alter table "public"."v2_orthos" add constraint "v2_orthos_pkey" PRIMARY KEY using index "v2_orthos_pkey";

alter table "public"."v2_statuses" add constraint "v2_statuses_pkey" PRIMARY KEY using index "v2_statuses_pkey";

alter table "public"."v2_thumbnails" add constraint "v2_thumbnails_pkey" PRIMARY KEY using index "v2_thumbnails_pkey";

alter table "public"."v2_cogs" add constraint "v2_cogs_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v2_datasets(id) ON DELETE CASCADE not valid;

alter table "public"."v2_cogs" validate constraint "v2_cogs_dataset_id_fkey";

alter table "public"."v2_datasets" add constraint "v2_datasets_aquisition_day_check" CHECK (((aquisition_day > 0) AND (aquisition_day < 32))) not valid;

alter table "public"."v2_datasets" validate constraint "v2_datasets_aquisition_day_check";

alter table "public"."v2_datasets" add constraint "v2_datasets_aquisition_month_check" CHECK (((aquisition_month > 0) AND (aquisition_month < 13))) not valid;

alter table "public"."v2_datasets" validate constraint "v2_datasets_aquisition_month_check";

alter table "public"."v2_datasets" add constraint "v2_datasets_aquisition_year_check" CHECK (((aquisition_year > 1980) AND (aquisition_year < 2099))) not valid;

alter table "public"."v2_datasets" validate constraint "v2_datasets_aquisition_year_check";

alter table "public"."v2_datasets" add constraint "v2_datasets_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."v2_datasets" validate constraint "v2_datasets_user_id_fkey";

alter table "public"."v2_orthos" add constraint "v2_orthos_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v2_datasets(id) ON DELETE CASCADE not valid;

alter table "public"."v2_orthos" validate constraint "v2_orthos_dataset_id_fkey";

alter table "public"."v2_statuses" add constraint "v2_statuses_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v2_datasets(id) ON DELETE CASCADE not valid;

alter table "public"."v2_statuses" validate constraint "v2_statuses_dataset_id_fkey";

alter table "public"."v2_thumbnails" add constraint "v2_thumbnails_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v2_datasets(id) ON DELETE CASCADE not valid;

alter table "public"."v2_thumbnails" validate constraint "v2_thumbnails_dataset_id_fkey";

grant delete on table "public"."v2_cogs" to "anon";

grant insert on table "public"."v2_cogs" to "anon";

grant references on table "public"."v2_cogs" to "anon";

grant select on table "public"."v2_cogs" to "anon";

grant trigger on table "public"."v2_cogs" to "anon";

grant truncate on table "public"."v2_cogs" to "anon";

grant update on table "public"."v2_cogs" to "anon";

grant delete on table "public"."v2_cogs" to "authenticated";

grant insert on table "public"."v2_cogs" to "authenticated";

grant references on table "public"."v2_cogs" to "authenticated";

grant select on table "public"."v2_cogs" to "authenticated";

grant trigger on table "public"."v2_cogs" to "authenticated";

grant truncate on table "public"."v2_cogs" to "authenticated";

grant update on table "public"."v2_cogs" to "authenticated";

grant delete on table "public"."v2_cogs" to "service_role";

grant insert on table "public"."v2_cogs" to "service_role";

grant references on table "public"."v2_cogs" to "service_role";

grant select on table "public"."v2_cogs" to "service_role";

grant trigger on table "public"."v2_cogs" to "service_role";

grant truncate on table "public"."v2_cogs" to "service_role";

grant update on table "public"."v2_cogs" to "service_role";

grant delete on table "public"."v2_datasets" to "anon";

grant insert on table "public"."v2_datasets" to "anon";

grant references on table "public"."v2_datasets" to "anon";

grant select on table "public"."v2_datasets" to "anon";

grant trigger on table "public"."v2_datasets" to "anon";

grant truncate on table "public"."v2_datasets" to "anon";

grant update on table "public"."v2_datasets" to "anon";

grant delete on table "public"."v2_datasets" to "authenticated";

grant insert on table "public"."v2_datasets" to "authenticated";

grant references on table "public"."v2_datasets" to "authenticated";

grant select on table "public"."v2_datasets" to "authenticated";

grant trigger on table "public"."v2_datasets" to "authenticated";

grant truncate on table "public"."v2_datasets" to "authenticated";

grant update on table "public"."v2_datasets" to "authenticated";

grant delete on table "public"."v2_datasets" to "service_role";

grant insert on table "public"."v2_datasets" to "service_role";

grant references on table "public"."v2_datasets" to "service_role";

grant select on table "public"."v2_datasets" to "service_role";

grant trigger on table "public"."v2_datasets" to "service_role";

grant truncate on table "public"."v2_datasets" to "service_role";

grant update on table "public"."v2_datasets" to "service_role";

grant delete on table "public"."v2_orthos" to "anon";

grant insert on table "public"."v2_orthos" to "anon";

grant references on table "public"."v2_orthos" to "anon";

grant select on table "public"."v2_orthos" to "anon";

grant trigger on table "public"."v2_orthos" to "anon";

grant truncate on table "public"."v2_orthos" to "anon";

grant update on table "public"."v2_orthos" to "anon";

grant delete on table "public"."v2_orthos" to "authenticated";

grant insert on table "public"."v2_orthos" to "authenticated";

grant references on table "public"."v2_orthos" to "authenticated";

grant select on table "public"."v2_orthos" to "authenticated";

grant trigger on table "public"."v2_orthos" to "authenticated";

grant truncate on table "public"."v2_orthos" to "authenticated";

grant update on table "public"."v2_orthos" to "authenticated";

grant delete on table "public"."v2_orthos" to "service_role";

grant insert on table "public"."v2_orthos" to "service_role";

grant references on table "public"."v2_orthos" to "service_role";

grant select on table "public"."v2_orthos" to "service_role";

grant trigger on table "public"."v2_orthos" to "service_role";

grant truncate on table "public"."v2_orthos" to "service_role";

grant update on table "public"."v2_orthos" to "service_role";

grant delete on table "public"."v2_statuses" to "anon";

grant insert on table "public"."v2_statuses" to "anon";

grant references on table "public"."v2_statuses" to "anon";

grant select on table "public"."v2_statuses" to "anon";

grant trigger on table "public"."v2_statuses" to "anon";

grant truncate on table "public"."v2_statuses" to "anon";

grant update on table "public"."v2_statuses" to "anon";

grant delete on table "public"."v2_statuses" to "authenticated";

grant insert on table "public"."v2_statuses" to "authenticated";

grant references on table "public"."v2_statuses" to "authenticated";

grant select on table "public"."v2_statuses" to "authenticated";

grant trigger on table "public"."v2_statuses" to "authenticated";

grant truncate on table "public"."v2_statuses" to "authenticated";

grant update on table "public"."v2_statuses" to "authenticated";

grant delete on table "public"."v2_statuses" to "service_role";

grant insert on table "public"."v2_statuses" to "service_role";

grant references on table "public"."v2_statuses" to "service_role";

grant select on table "public"."v2_statuses" to "service_role";

grant trigger on table "public"."v2_statuses" to "service_role";

grant truncate on table "public"."v2_statuses" to "service_role";

grant update on table "public"."v2_statuses" to "service_role";

grant delete on table "public"."v2_thumbnails" to "anon";

grant insert on table "public"."v2_thumbnails" to "anon";

grant references on table "public"."v2_thumbnails" to "anon";

grant select on table "public"."v2_thumbnails" to "anon";

grant trigger on table "public"."v2_thumbnails" to "anon";

grant truncate on table "public"."v2_thumbnails" to "anon";

grant update on table "public"."v2_thumbnails" to "anon";

grant delete on table "public"."v2_thumbnails" to "authenticated";

grant insert on table "public"."v2_thumbnails" to "authenticated";

grant references on table "public"."v2_thumbnails" to "authenticated";

grant select on table "public"."v2_thumbnails" to "authenticated";

grant trigger on table "public"."v2_thumbnails" to "authenticated";

grant truncate on table "public"."v2_thumbnails" to "authenticated";

grant update on table "public"."v2_thumbnails" to "authenticated";

grant delete on table "public"."v2_thumbnails" to "service_role";

grant insert on table "public"."v2_thumbnails" to "service_role";

grant references on table "public"."v2_thumbnails" to "service_role";

grant select on table "public"."v2_thumbnails" to "service_role";

grant trigger on table "public"."v2_thumbnails" to "service_role";

grant truncate on table "public"."v2_thumbnails" to "service_role";

grant update on table "public"."v2_thumbnails" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."v2_cogs"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v2_cogs"
as permissive
for select
to public
using (true);


create policy "Enable update for processor"
on "public"."v2_cogs"
as permissive
for update
to public
using (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text))
with check (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text));


create policy "Enable insert for authenticated users only"
on "public"."v2_orthos"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v2_orthos"
as permissive
for select
to public
using (true);


create policy "Enable update for processor"
on "public"."v2_orthos"
as permissive
for update
to public
using (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text))
with check (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text));


create policy "Enable insert for authenticated users only"
on "public"."v2_statuses"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v2_statuses"
as permissive
for select
to public
using (true);


create policy "Enable update for processor"
on "public"."v2_statuses"
as permissive
for update
to public
using (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text))
with check (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text));


create policy "Enable insert for authenticated users only"
on "public"."v2_thumbnails"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v2_thumbnails"
as permissive
for select
to public
using (true);


create policy "Enable update for processor"
on "public"."v2_thumbnails"
as permissive
for update
to public
using (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text))
with check (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text));



