-- Create new tables for deadwood and forest cover geometries
CREATE TABLE "public"."v2_deadwood_geometries" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "label_id" bigint NOT NULL REFERENCES "public"."v2_labels"(id) ON DELETE CASCADE,
    "geometry" geometry(MULTIPOLYGON, 4326) NOT NULL,
    "properties" jsonb,
    "created_at" timestamp with time zone NOT NULL DEFAULT now()
);

CREATE TABLE "public"."v2_forest_cover_geometries" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "label_id" bigint NOT NULL REFERENCES "public"."v2_labels"(id) ON DELETE CASCADE,
    "geometry" geometry(MULTIPOLYGON, 4326) NOT NULL,
    "properties" jsonb,
    "created_at" timestamp with time zone NOT NULL DEFAULT now()
);

-- Create spatial indexes
CREATE INDEX idx_deadwood_geom ON "public"."v2_deadwood_geometries" USING GIST(geometry);
CREATE INDEX idx_forest_cover_geom ON "public"."v2_forest_cover_geometries" USING GIST(geometry);

-- Enable RLS
ALTER TABLE "public"."v2_deadwood_geometries" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."v2_forest_cover_geometries" ENABLE ROW LEVEL SECURITY;

-- Add policies for deadwood geometries
CREATE POLICY "Allow public read access to deadwood geometries"
ON "public"."v2_deadwood_geometries"
FOR SELECT TO public
USING (true);

CREATE POLICY "Allow authenticated users to create deadwood geometries"
ON "public"."v2_deadwood_geometries"
FOR INSERT TO authenticated
WITH CHECK (EXISTS (
    SELECT 1 FROM "public"."v2_labels" 
    WHERE id = label_id AND user_id = auth.uid()
));

CREATE POLICY "Allow users to update their own deadwood geometries"
ON "public"."v2_deadwood_geometries"
FOR UPDATE TO authenticated
USING (EXISTS (
    SELECT 1 FROM "public"."v2_labels" 
    WHERE id = label_id AND user_id = auth.uid()
))
WITH CHECK (EXISTS (
    SELECT 1 FROM "public"."v2_labels" 
    WHERE id = label_id AND user_id = auth.uid()
));

-- Add policies for forest cover geometries
CREATE POLICY "Allow public read access to forest cover geometries"
ON "public"."v2_forest_cover_geometries"
FOR SELECT TO public
USING (true);

CREATE POLICY "Allow authenticated users to create forest cover geometries"
ON "public"."v2_forest_cover_geometries"
FOR INSERT TO authenticated
WITH CHECK (EXISTS (
    SELECT 1 FROM "public"."v2_labels" 
    WHERE id = label_id AND user_id = auth.uid()
));

CREATE POLICY "Allow users to update their own forest cover geometries"
ON "public"."v2_forest_cover_geometries"
FOR UPDATE TO authenticated
USING (EXISTS (
    SELECT 1 FROM "public"."v2_labels" 
    WHERE id = label_id AND user_id = auth.uid()
))
WITH CHECK (EXISTS (
    SELECT 1 FROM "public"."v2_labels" 
    WHERE id = label_id AND user_id = auth.uid()
));

-- Drop old table after migration
DROP TABLE "public"."v2_label_geometries"; 

alter table "public"."v2_deadwood_geometries" alter column "geometry" set data type geometry(Polygon,4326) using "geometry"::geometry(Polygon,4326);

alter table "public"."v2_forest_cover_geometries" alter column "geometry" set data type geometry(Polygon,4326) using "geometry"::geometry(Polygon,4326);