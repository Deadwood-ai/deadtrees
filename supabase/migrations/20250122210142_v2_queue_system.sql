create table "public"."v2_queue" (
    "id" bigint generated by default as identity not null,
    "dataset_id" bigint not null,
    "user_id" uuid not null,
    "build_args" jsonb not null default '{}'::jsonb,
    "created_at" timestamp with time zone not null default now(),
    "is_processing" boolean not null default false,
    "priority" smallint not null default '2'::smallint,
    "task_types" text[]
);


alter table "public"."v2_queue" enable row level security;

create table "public"."v2_queue_positions" (
    "id" bigint not null,
    "position" integer not null,
    "estimated_time" double precision,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."v2_queue_positions" enable row level security;

CREATE UNIQUE INDEX v2_queue_pkey ON public.v2_queue USING btree (id);

CREATE UNIQUE INDEX v2_queue_positions_pkey ON public.v2_queue_positions USING btree (id);

alter table "public"."v2_queue" add constraint "v2_queue_pkey" PRIMARY KEY using index "v2_queue_pkey";

alter table "public"."v2_queue_positions" add constraint "v2_queue_positions_pkey" PRIMARY KEY using index "v2_queue_positions_pkey";

alter table "public"."v2_queue" add constraint "v2_queue_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v2_datasets(id) ON DELETE CASCADE not valid;

alter table "public"."v2_queue" validate constraint "v2_queue_dataset_id_fkey";

alter table "public"."v2_queue_positions" add constraint "v2_queue_positions_id_fkey" FOREIGN KEY (id) REFERENCES v2_queue(id) ON DELETE CASCADE not valid;

alter table "public"."v2_queue_positions" validate constraint "v2_queue_positions_id_fkey";

grant delete on table "public"."v2_queue" to "anon";

grant insert on table "public"."v2_queue" to "anon";

grant references on table "public"."v2_queue" to "anon";

grant select on table "public"."v2_queue" to "anon";

grant trigger on table "public"."v2_queue" to "anon";

grant truncate on table "public"."v2_queue" to "anon";

grant update on table "public"."v2_queue" to "anon";

grant delete on table "public"."v2_queue" to "authenticated";

grant insert on table "public"."v2_queue" to "authenticated";

grant references on table "public"."v2_queue" to "authenticated";

grant select on table "public"."v2_queue" to "authenticated";

grant trigger on table "public"."v2_queue" to "authenticated";

grant truncate on table "public"."v2_queue" to "authenticated";

grant update on table "public"."v2_queue" to "authenticated";

grant delete on table "public"."v2_queue" to "service_role";

grant insert on table "public"."v2_queue" to "service_role";

grant references on table "public"."v2_queue" to "service_role";

grant select on table "public"."v2_queue" to "service_role";

grant trigger on table "public"."v2_queue" to "service_role";

grant truncate on table "public"."v2_queue" to "service_role";

grant update on table "public"."v2_queue" to "service_role";

grant delete on table "public"."v2_queue_positions" to "anon";

grant insert on table "public"."v2_queue_positions" to "anon";

grant references on table "public"."v2_queue_positions" to "anon";

grant select on table "public"."v2_queue_positions" to "anon";

grant trigger on table "public"."v2_queue_positions" to "anon";

grant truncate on table "public"."v2_queue_positions" to "anon";

grant update on table "public"."v2_queue_positions" to "anon";

grant delete on table "public"."v2_queue_positions" to "authenticated";

grant insert on table "public"."v2_queue_positions" to "authenticated";

grant references on table "public"."v2_queue_positions" to "authenticated";

grant select on table "public"."v2_queue_positions" to "authenticated";

grant trigger on table "public"."v2_queue_positions" to "authenticated";

grant truncate on table "public"."v2_queue_positions" to "authenticated";

grant update on table "public"."v2_queue_positions" to "authenticated";

grant delete on table "public"."v2_queue_positions" to "service_role";

grant insert on table "public"."v2_queue_positions" to "service_role";

grant references on table "public"."v2_queue_positions" to "service_role";

grant select on table "public"."v2_queue_positions" to "service_role";

grant trigger on table "public"."v2_queue_positions" to "service_role";

grant truncate on table "public"."v2_queue_positions" to "service_role";

grant update on table "public"."v2_queue_positions" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."v2_queue"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v2_queue"
as permissive
for select
to public
using (true);


create policy "Enable update for processor"
on "public"."v2_queue"
as permissive
for update
to public
using (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text))
with check (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text));


create policy "Enable insert for authenticated users only"
on "public"."v2_queue_positions"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v2_queue_positions"
as permissive
for select
to public
using (true);


create policy "Enable update for processor"
on "public"."v2_queue_positions"
as permissive
for update
to public
using (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text))
with check (((auth.jwt() ->> 'email'::text) = 'processor@deadtrees.earth'::text));



