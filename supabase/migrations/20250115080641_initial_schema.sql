CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA public;

create type "public"."LabelSource" as enum ('visual_interpretation', 'model_prediction', 'fixed_model_prediction');

create type "public"."LabelType" as enum ('point_observation', 'segmentation', 'instance_segmentation', 'semantic_segmentation');

create type "public"."License" as enum ('CC BY', 'CC BY-SA', 'CC BY-NC-SA', 'MIT');

create type "public"."Platform" as enum ('drone', 'airborne', 'sattelfite');

create type "public"."Status" as enum ('pending', 'processing', 'errored', 'processed', 'audited', 'audit_failed', 'cog_processing', 'thumbnail_processing', 'cog_errored', 'thumbnail_errored', 'uploading', 'uploaded', 'deadwood_prediction', 'deadwood_errored');

create type "public"."access" as enum ('public', 'viewonly', 'private');

create sequence "public"."v1_thumbnails_dataset_id_seq";

create table "public"."collaborators" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "collaborator_text" text
);


create table "public"."database_stats" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "date" date,
    "area_covered" numeric,
    "orthophotos_count" integer,
    "countries_count" integer,
    "contributors_count" integer
);


create table "public"."deadtrees_logs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" text,
    "process" text,
    "level" text,
    "message" text,
    "file_name" text
);


create table "public"."dev_cogs" (
    "dataset_id" bigint not null,
    "cog_folder" text not null,
    "cog_name" text not null,
    "cog_url" text not null,
    "cog_size" bigint not null,
    "runtime" double precision not null,
    "user_id" uuid not null,
    "compression" text not null,
    "overviews" integer not null,
    "resolution" integer not null,
    "blocksize" integer,
    "compression_level" text,
    "tiling_scheme" text,
    "created_at" timestamp with time zone not null default now()
);


create table "public"."dev_datasets" (
    "id" bigint generated by default as identity not null,
    "file_name" text not null,
    "file_size" bigint,
    "bbox" box2d,
    "status" "Status" not null default 'pending'::"Status",
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "copy_time" numeric not null,
    "sha256" text,
    "file_alias" text
);


alter table "public"."dev_datasets" enable row level security;

create table "public"."dev_geotiff_info" (
    "dataset_id" integer not null,
    "driver" character varying(255) not null,
    "size_width" integer not null,
    "size_height" integer not null,
    "file_size_gb" real not null,
    "crs" text not null,
    "crs_code" character varying(50),
    "geodetic_datum" character varying(255),
    "pixel_size_x" double precision not null,
    "pixel_size_y" double precision not null,
    "block_size_x" integer not null,
    "block_size_y" integer not null,
    "is_tiled" boolean not null,
    "compression" character varying(50),
    "interleave" character varying(50),
    "is_bigtiff" boolean not null,
    "band_count" integer not null,
    "band_types" character varying[] not null,
    "band_interpretations" character varying[] not null,
    "band_nodata_values" double precision[],
    "origin_x" double precision not null,
    "origin_y" double precision not null,
    "extra_metadata" jsonb,
    "created_at" timestamp with time zone default CURRENT_TIMESTAMP
);


create table "public"."dev_label_objects" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "dataset_id" bigint not null,
    "file_alias" text,
    "file_type" text,
    "label_description" text,
    "user_id" uuid,
    "file_path" text,
    "audited" boolean not null
);


alter table "public"."dev_label_objects" enable row level security;

create table "public"."dev_labels" (
    "id" bigint generated by default as identity not null,
    "dataset_id" bigint not null,
    "user_id" uuid not null,
    "aoi" jsonb,
    "label" jsonb,
    "label_source" "LabelSource" not null,
    "label_quality" smallint,
    "created_at" timestamp with time zone not null default now(),
    "label_type" "LabelType" not null
);


alter table "public"."dev_labels" enable row level security;

create table "public"."dev_logs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "level" text,
    "message" text,
    "origin" text,
    "origin_line" integer,
    "user_id" uuid,
    "dataset_id" bigint,
    "backend_version" text
);


create table "public"."dev_metadata" (
    "dataset_id" bigint not null,
    "user_id" uuid not null,
    "name" text not null,
    "license" "License",
    "platform" "Platform" not null,
    "project_id" text,
    "authors" text,
    "spectral_properties" text,
    "citation_doi" text,
    "admin_level_1" text,
    "admin_level_2" text,
    "admin_level_3" text,
    "aquisition_year" smallint,
    "aquisition_month" smallint,
    "aquisition_day" smallint,
    "additional_information" text,
    "data_access" access not null default 'public'::access
);


create table "public"."dev_queue" (
    "id" bigint generated by default as identity not null,
    "dataset_id" bigint not null,
    "user_id" uuid not null,
    "build_args" jsonb not null default '{}'::jsonb,
    "created_at" timestamp with time zone not null default now(),
    "is_processing" boolean not null default false,
    "priority" smallint not null default '2'::smallint,
    "task_type" text,
    "task_types" text[]
);


create table "public"."dev_thumbnails" (
    "dataset_id" integer not null default nextval('v1_thumbnails_dataset_id_seq'::regclass),
    "base64img" text,
    "user_id" uuid not null,
    "thumbnail_path" text,
    "created_at" timestamp with time zone default now(),
    "runtime" double precision
);


create table "public"."labels_dev_egu" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "aoi" json,
    "standing_deadwood" json,
    "ortho_file_name" text
);


create table "public"."logs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "level" text,
    "message" text,
    "origin" text,
    "origin_line" integer,
    "user_id" uuid,
    "dataset_id" bigint,
    "backend_version" text
);


create table "public"."metadata_dev_egu" (
    "filename" text not null,
    "project_id" text,
    "authors_image" text,
    "email" text,
    "label_type" text,
    "label_source" text,
    "image_platform" text,
    "image_spectral_properties" text,
    "citation_doi" text,
    "label_quality" text,
    "has_labels" boolean,
    "license" text,
    "public" boolean,
    "acquisition_date_generated" timestamp without time zone,
    "display_filename" text,
    "gadm_NAME_0" text,
    "gadm_NAME_1" text,
    "gadm_NAME_2" text,
    "gadm_NAME_3" text
);


alter table "public"."metadata_dev_egu" enable row level security;

create table "public"."metadata_dev_egu_v2" (
    "filename" text not null,
    "project_id" text,
    "authors_image" text,
    "email" text,
    "label_type" text,
    "label_source" text,
    "image_platform" text,
    "image_spectral_properties" text,
    "citation_doi" text,
    "label_quality" text,
    "has_labels" boolean,
    "license" text,
    "public" boolean,
    "additional_information" text,
    "acquisition_date_generated" timestamp without time zone,
    "centroid" json,
    "display_filename" text,
    "gadm_NAME_0" text,
    "gadm_NAME_1" text,
    "gadm_NAME_2" text,
    "gadm_NAME_3" text
);


create table "public"."newsletter" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "email" text
);


create table "public"."presentations" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "date" date not null,
    "title" text not null,
    "event" text not null,
    "url" text,
    "speaker" text
);


alter table "public"."presentations" enable row level security;

create table "public"."projects" (
    "id" text not null,
    "project_name" text not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."projects" enable row level security;

create table "public"."publications" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "title" text not null,
    "authors" text not null,
    "year" text,
    "publication_date" date,
    "publisher" text,
    "url" text not null
);


alter table "public"."publications" enable row level security;

create table "public"."upload_files_dev" (
    "id" bigint generated by default as identity not null,
    "uuid" uuid not null,
    "user_id" uuid not null,
    "aquisition_date" date not null,
    "upload_date" timestamp without time zone not null,
    "file_name" text not null,
    "content_type" character varying not null,
    "file_size" bigint not null,
    "raw_path" text not null,
    "sha256" character varying not null,
    "platform" "Platform" not null,
    "license" "License" not null default 'CC BY'::"License",
    "status" "Status" not null default 'pending'::"Status",
    "file_id" text not null,
    "created_at" timestamp with time zone not null default now(),
    "copy_time" double precision not null,
    "compress_time" double precision,
    "bbox" box2d,
    "wms_source" text,
    "processed_path" text
);


alter table "public"."upload_files_dev" enable row level security;

create table "public"."v1_cogs" (
    "dataset_id" bigint not null,
    "cog_folder" text not null,
    "cog_name" text not null,
    "cog_url" text not null,
    "cog_size" bigint not null,
    "runtime" double precision not null,
    "user_id" uuid not null,
    "compression" text not null,
    "overviews" integer not null,
    "resolution" integer not null,
    "blocksize" integer,
    "compression_level" text,
    "tiling_scheme" text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."v1_cogs" enable row level security;

create table "public"."v1_datasets" (
    "id" bigint generated by default as identity not null,
    "file_name" text not null,
    "file_size" bigint,
    "bbox" box2d,
    "status" "Status" not null default 'pending'::"Status",
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "copy_time" numeric not null,
    "sha256" text,
    "file_alias" text
);


alter table "public"."v1_datasets" enable row level security;

create table "public"."v1_geotiff_info" (
    "dataset_id" integer not null,
    "driver" character varying(255) not null,
    "size_width" integer not null,
    "size_height" integer not null,
    "file_size_gb" real not null,
    "crs" text not null,
    "crs_code" character varying(50),
    "geodetic_datum" character varying(255),
    "pixel_size_x" double precision not null,
    "pixel_size_y" double precision not null,
    "block_size_x" integer not null,
    "block_size_y" integer not null,
    "is_tiled" boolean not null,
    "compression" character varying(50),
    "interleave" character varying(50),
    "is_bigtiff" boolean not null,
    "band_count" integer not null,
    "band_types" character varying[] not null,
    "band_interpretations" character varying[] not null,
    "band_nodata_values" double precision[],
    "origin_x" double precision not null,
    "origin_y" double precision not null,
    "extra_metadata" jsonb,
    "created_at" timestamp with time zone default CURRENT_TIMESTAMP
);


create table "public"."v1_label_objects" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "dataset_id" bigint not null,
    "file_alias" text,
    "file_type" text,
    "label_description" text,
    "user_id" uuid,
    "file_path" text,
    "audited" boolean not null
);


alter table "public"."v1_label_objects" enable row level security;

create table "public"."v1_labels" (
    "id" bigint generated by default as identity not null,
    "dataset_id" bigint not null,
    "user_id" uuid not null,
    "aoi" jsonb,
    "label" jsonb,
    "label_source" "LabelSource" not null,
    "label_quality" smallint,
    "created_at" timestamp with time zone not null default now(),
    "label_type" "LabelType" not null
);


alter table "public"."v1_labels" enable row level security;

create table "public"."v1_metadata" (
    "dataset_id" bigint not null,
    "user_id" uuid not null,
    "name" text not null,
    "license" "License",
    "platform" "Platform" not null,
    "project_id" text,
    "authors" text,
    "spectral_properties" text,
    "citation_doi" text,
    "admin_level_1" text,
    "admin_level_2" text,
    "admin_level_3" text,
    "aquisition_year" smallint,
    "aquisition_month" smallint,
    "aquisition_day" smallint,
    "additional_information" text,
    "data_access" access not null default 'public'::access
);


alter table "public"."v1_metadata" enable row level security;

create table "public"."v1_queue" (
    "id" bigint generated by default as identity not null,
    "dataset_id" bigint not null,
    "user_id" uuid not null,
    "build_args" jsonb not null default '{}'::jsonb,
    "created_at" timestamp with time zone not null default now(),
    "is_processing" boolean not null default false,
    "priority" smallint not null default '2'::smallint,
    "task_type" text
);


alter table "public"."v1_queue" enable row level security;

create table "public"."v1_thumbnails" (
    "dataset_id" integer not null default nextval('v1_thumbnails_dataset_id_seq'::regclass),
    "base64img" text,
    "user_id" uuid not null,
    "thumbnail_path" text,
    "runtime" double precision
);


alter table "public"."v1_thumbnails" enable row level security;

alter sequence "public"."v1_thumbnails_dataset_id_seq" owned by "public"."v1_thumbnails"."dataset_id";

CREATE UNIQUE INDEX collaborators_pkey ON public.collaborators USING btree (id);

CREATE UNIQUE INDEX database_stats_pkey ON public.database_stats USING btree (id);

CREATE UNIQUE INDEX datasets_pkey ON public.v1_datasets USING btree (id);

CREATE UNIQUE INDEX deadtrees_logs_pkey ON public.deadtrees_logs USING btree (id);

CREATE UNIQUE INDEX dev_cogs_pkey ON public.dev_cogs USING btree (dataset_id, cog_folder, cog_name);

CREATE UNIQUE INDEX dev_datasets_pkey ON public.dev_datasets USING btree (id);

CREATE UNIQUE INDEX dev_geotiff_info_pkey ON public.dev_geotiff_info USING btree (dataset_id);

CREATE UNIQUE INDEX dev_label_objects_pkey ON public.dev_label_objects USING btree (id);

CREATE UNIQUE INDEX dev_labels_pkey ON public.dev_labels USING btree (id);

CREATE UNIQUE INDEX dev_logs_pkey ON public.dev_logs USING btree (id);

CREATE UNIQUE INDEX dev_metadata_pkey ON public.dev_metadata USING btree (dataset_id);

CREATE UNIQUE INDEX dev_queue_pkey ON public.dev_queue USING btree (id);

CREATE UNIQUE INDEX dev_thumbnails_pkey ON public.dev_thumbnails USING btree (dataset_id);

CREATE INDEX idx_dev_geotiff_info_created_at ON public.dev_geotiff_info USING btree (created_at);

CREATE INDEX idx_v1_geotiff_info_created_at ON public.v1_geotiff_info USING btree (created_at);

CREATE INDEX labels_dev_egu_ortho_file_name_idx ON public.labels_dev_egu USING btree (ortho_file_name);

CREATE UNIQUE INDEX labels_dev_egu_pkey ON public.labels_dev_egu USING btree (id);

CREATE UNIQUE INDEX logs_pkey ON public.logs USING btree (id);

CREATE UNIQUE INDEX metadata_dev_egu_pkey ON public.metadata_dev_egu USING btree (filename);

CREATE UNIQUE INDEX metadata_dev_egu_v2_pkey ON public.metadata_dev_egu_v2 USING btree (filename);

CREATE UNIQUE INDEX newsletter_pkey ON public.newsletter USING btree (id);

CREATE UNIQUE INDEX projects_pkey ON public.projects USING btree (id);

CREATE UNIQUE INDEX publications_pkey ON public.presentations USING btree (id);

CREATE UNIQUE INDEX publications_pkey1 ON public.publications USING btree (id);

CREATE INDEX upload_files_dev_file_name_idx ON public.upload_files_dev USING btree (file_name);

CREATE UNIQUE INDEX upload_files_dev_pkey ON public.upload_files_dev USING btree (id);

CREATE UNIQUE INDEX upload_files_dev_uuid_key ON public.upload_files_dev USING btree (uuid);

CREATE UNIQUE INDEX v1_cogs_pkey ON public.v1_cogs USING btree (dataset_id, cog_folder, cog_name);

CREATE UNIQUE INDEX v1_geotiff_info_pkey ON public.v1_geotiff_info USING btree (dataset_id);

CREATE UNIQUE INDEX v1_label_objects_duplicate_pkey ON public.v1_label_objects USING btree (id);

CREATE UNIQUE INDEX v1_labels_pkey ON public.v1_labels USING btree (id);

CREATE UNIQUE INDEX v1_metadata_pkey ON public.v1_metadata USING btree (dataset_id);

CREATE UNIQUE INDEX v1_queue_pkey ON public.v1_queue USING btree (id);

CREATE UNIQUE INDEX v1_thumbnails_pkey ON public.v1_thumbnails USING btree (dataset_id);

alter table "public"."collaborators" add constraint "collaborators_pkey" PRIMARY KEY using index "collaborators_pkey";

alter table "public"."database_stats" add constraint "database_stats_pkey" PRIMARY KEY using index "database_stats_pkey";

alter table "public"."deadtrees_logs" add constraint "deadtrees_logs_pkey" PRIMARY KEY using index "deadtrees_logs_pkey";

alter table "public"."dev_cogs" add constraint "dev_cogs_pkey" PRIMARY KEY using index "dev_cogs_pkey";

alter table "public"."dev_datasets" add constraint "dev_datasets_pkey" PRIMARY KEY using index "dev_datasets_pkey";

alter table "public"."dev_geotiff_info" add constraint "dev_geotiff_info_pkey" PRIMARY KEY using index "dev_geotiff_info_pkey";

alter table "public"."dev_label_objects" add constraint "dev_label_objects_pkey" PRIMARY KEY using index "dev_label_objects_pkey";

alter table "public"."dev_labels" add constraint "dev_labels_pkey" PRIMARY KEY using index "dev_labels_pkey";

alter table "public"."dev_logs" add constraint "dev_logs_pkey" PRIMARY KEY using index "dev_logs_pkey";

alter table "public"."dev_metadata" add constraint "dev_metadata_pkey" PRIMARY KEY using index "dev_metadata_pkey";

alter table "public"."dev_queue" add constraint "dev_queue_pkey" PRIMARY KEY using index "dev_queue_pkey";

alter table "public"."dev_thumbnails" add constraint "dev_thumbnails_pkey" PRIMARY KEY using index "dev_thumbnails_pkey";

alter table "public"."labels_dev_egu" add constraint "labels_dev_egu_pkey" PRIMARY KEY using index "labels_dev_egu_pkey";

alter table "public"."logs" add constraint "logs_pkey" PRIMARY KEY using index "logs_pkey";

alter table "public"."metadata_dev_egu" add constraint "metadata_dev_egu_pkey" PRIMARY KEY using index "metadata_dev_egu_pkey";

alter table "public"."metadata_dev_egu_v2" add constraint "metadata_dev_egu_v2_pkey" PRIMARY KEY using index "metadata_dev_egu_v2_pkey";

alter table "public"."newsletter" add constraint "newsletter_pkey" PRIMARY KEY using index "newsletter_pkey";

alter table "public"."presentations" add constraint "publications_pkey" PRIMARY KEY using index "publications_pkey";

alter table "public"."projects" add constraint "projects_pkey" PRIMARY KEY using index "projects_pkey";

alter table "public"."publications" add constraint "publications_pkey1" PRIMARY KEY using index "publications_pkey1";

alter table "public"."upload_files_dev" add constraint "upload_files_dev_pkey" PRIMARY KEY using index "upload_files_dev_pkey";

alter table "public"."v1_cogs" add constraint "v1_cogs_pkey" PRIMARY KEY using index "v1_cogs_pkey";

alter table "public"."v1_datasets" add constraint "datasets_pkey" PRIMARY KEY using index "datasets_pkey";

alter table "public"."v1_geotiff_info" add constraint "v1_geotiff_info_pkey" PRIMARY KEY using index "v1_geotiff_info_pkey";

alter table "public"."v1_label_objects" add constraint "v1_label_objects_duplicate_pkey" PRIMARY KEY using index "v1_label_objects_duplicate_pkey";

alter table "public"."v1_labels" add constraint "v1_labels_pkey" PRIMARY KEY using index "v1_labels_pkey";

alter table "public"."v1_metadata" add constraint "v1_metadata_pkey" PRIMARY KEY using index "v1_metadata_pkey";

alter table "public"."v1_queue" add constraint "v1_queue_pkey" PRIMARY KEY using index "v1_queue_pkey";

alter table "public"."v1_thumbnails" add constraint "v1_thumbnails_pkey" PRIMARY KEY using index "v1_thumbnails_pkey";

alter table "public"."dev_cogs" add constraint "dev_cogs_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES dev_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dev_cogs" validate constraint "dev_cogs_dataset_id_fkey";

alter table "public"."dev_cogs" add constraint "dev_cogs_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."dev_cogs" validate constraint "dev_cogs_user_id_fkey";

alter table "public"."dev_datasets" add constraint "dev_datasets_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."dev_datasets" validate constraint "dev_datasets_user_id_fkey";

alter table "public"."dev_geotiff_info" add constraint "dev_geotiff_info_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES dev_datasets(id) ON DELETE CASCADE not valid;

alter table "public"."dev_geotiff_info" validate constraint "dev_geotiff_info_dataset_id_fkey";

alter table "public"."dev_label_objects" add constraint "dev_label_objects_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES dev_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dev_label_objects" validate constraint "dev_label_objects_dataset_id_fkey";

alter table "public"."dev_label_objects" add constraint "dev_label_objects_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."dev_label_objects" validate constraint "dev_label_objects_user_id_fkey";

alter table "public"."dev_labels" add constraint "dev_labels_dataset_id_fkey1" FOREIGN KEY (dataset_id) REFERENCES dev_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dev_labels" validate constraint "dev_labels_dataset_id_fkey1";

alter table "public"."dev_labels" add constraint "dev_labels_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."dev_labels" validate constraint "dev_labels_user_id_fkey";

alter table "public"."dev_logs" add constraint "dev_logs_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."dev_logs" validate constraint "dev_logs_user_id_fkey";

alter table "public"."dev_metadata" add constraint "dev_metadata_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES dev_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dev_metadata" validate constraint "dev_metadata_dataset_id_fkey";

alter table "public"."dev_metadata" add constraint "dev_metadata_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."dev_metadata" validate constraint "dev_metadata_user_id_fkey";

alter table "public"."dev_metadata" add constraint "v1_metadata_aquisition_day_check" CHECK (((aquisition_day > 0) AND (aquisition_day < 32))) not valid;

alter table "public"."dev_metadata" validate constraint "v1_metadata_aquisition_day_check";

alter table "public"."dev_metadata" add constraint "v1_metadata_aquisition_month_check" CHECK (((aquisition_month < 13) AND (aquisition_month > 0))) not valid;

alter table "public"."dev_metadata" validate constraint "v1_metadata_aquisition_month_check";

alter table "public"."dev_metadata" add constraint "v1_metadata_aquisition_year_check" CHECK (((aquisition_year > 1980) AND (aquisition_year < 2099))) not valid;

alter table "public"."dev_metadata" validate constraint "v1_metadata_aquisition_year_check";

alter table "public"."dev_queue" add constraint "dev_queue_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES dev_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dev_queue" validate constraint "dev_queue_dataset_id_fkey";

alter table "public"."dev_queue" add constraint "dev_queue_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dev_queue" validate constraint "dev_queue_user_id_fkey";

alter table "public"."dev_thumbnails" add constraint "dev_thumbnails_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES dev_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dev_thumbnails" validate constraint "dev_thumbnails_dataset_id_fkey";

alter table "public"."dev_thumbnails" add constraint "dev_thumbnails_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."dev_thumbnails" validate constraint "dev_thumbnails_user_id_fkey";

alter table "public"."logs" add constraint "public_logs_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."logs" validate constraint "public_logs_user_id_fkey";

alter table "public"."upload_files_dev" add constraint "public_upload_files_dev_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."upload_files_dev" validate constraint "public_upload_files_dev_user_id_fkey";

alter table "public"."upload_files_dev" add constraint "upload_files_dev_uuid_key" UNIQUE using index "upload_files_dev_uuid_key";

alter table "public"."upload_files_dev" add constraint "upload_files_sha256_check" CHECK ((length((sha256)::text) = 64)) not valid;

alter table "public"."upload_files_dev" validate constraint "upload_files_sha256_check";

alter table "public"."v1_cogs" add constraint "cogs_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."v1_cogs" validate constraint "cogs_user_id_fkey";

alter table "public"."v1_cogs" add constraint "v1_cogs_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v1_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."v1_cogs" validate constraint "v1_cogs_dataset_id_fkey";

alter table "public"."v1_datasets" add constraint "datasets_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."v1_datasets" validate constraint "datasets_user_id_fkey";

alter table "public"."v1_geotiff_info" add constraint "v1_geotiff_info_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v1_datasets(id) ON DELETE CASCADE not valid;

alter table "public"."v1_geotiff_info" validate constraint "v1_geotiff_info_dataset_id_fkey";

alter table "public"."v1_label_objects" add constraint "v1_label_objects_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v1_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."v1_label_objects" validate constraint "v1_label_objects_dataset_id_fkey";

alter table "public"."v1_label_objects" add constraint "v1_label_objects_duplicate_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."v1_label_objects" validate constraint "v1_label_objects_duplicate_user_id_fkey";

alter table "public"."v1_labels" add constraint "v1_labels_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v1_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."v1_labels" validate constraint "v1_labels_dataset_id_fkey";

alter table "public"."v1_labels" add constraint "v1_labels_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."v1_labels" validate constraint "v1_labels_user_id_fkey";

alter table "public"."v1_metadata" add constraint "v1_metadata_aquisition_day_check" CHECK (((aquisition_day > 0) AND (aquisition_day < 32))) not valid;

alter table "public"."v1_metadata" validate constraint "v1_metadata_aquisition_day_check";

alter table "public"."v1_metadata" add constraint "v1_metadata_aquisition_month_check" CHECK (((aquisition_month < 13) AND (aquisition_month > 0))) not valid;

alter table "public"."v1_metadata" validate constraint "v1_metadata_aquisition_month_check";

alter table "public"."v1_metadata" add constraint "v1_metadata_aquisition_year_check" CHECK (((aquisition_year > 1980) AND (aquisition_year < 2099))) not valid;

alter table "public"."v1_metadata" validate constraint "v1_metadata_aquisition_year_check";

alter table "public"."v1_metadata" add constraint "v1_metadata_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v1_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."v1_metadata" validate constraint "v1_metadata_dataset_id_fkey";

alter table "public"."v1_metadata" add constraint "v1_metadata_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."v1_metadata" validate constraint "v1_metadata_user_id_fkey";

alter table "public"."v1_queue" add constraint "v1_queue_dataset_id_fkey" FOREIGN KEY (dataset_id) REFERENCES v1_datasets(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."v1_queue" validate constraint "v1_queue_dataset_id_fkey";

alter table "public"."v1_queue" add constraint "v1_queue_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."v1_queue" validate constraint "v1_queue_user_id_fkey";

alter table "public"."v1_thumbnails" add constraint "v1_thumbnails_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."v1_thumbnails" validate constraint "v1_thumbnails_user_id_fkey";

create or replace view "public"."dev_full_dataset_view" as  WITH ds AS (
         SELECT dev_datasets.id,
            dev_datasets.file_name,
            dev_datasets.file_size,
            dev_datasets.bbox,
            dev_datasets.status,
            dev_datasets.created_at,
            dev_datasets.copy_time,
            dev_datasets.sha256,
            dev_datasets.file_alias
           FROM dev_datasets
        ), extra AS (
         SELECT ds_1.id AS dataset_id,
            cog.cog_folder,
            cog.cog_name,
            cog.cog_url,
            lab.label_source,
            lab.label_quality,
            lab.label_type,
            thumb.base64img AS thumbnail_src
           FROM (((dev_datasets ds_1
             LEFT JOIN dev_cogs cog ON ((cog.dataset_id = ds_1.id)))
             LEFT JOIN v1_labels lab ON ((lab.dataset_id = ds_1.id)))
             LEFT JOIN dev_thumbnails thumb ON ((thumb.dataset_id = ds_1.id)))
        )
 SELECT ds.id,
    ds.file_name,
    ds.file_size,
    ds.bbox,
    ds.status,
    ds.created_at,
    ds.copy_time,
    ds.sha256,
    ds.file_alias,
    m.dataset_id,
    m.user_id,
    m.name,
    m.license,
    m.platform,
    m.project_id,
    m.authors,
    m.spectral_properties,
    m.citation_doi,
    m.admin_level_1,
    m.admin_level_2,
    m.admin_level_3,
    m.aquisition_day,
    m.aquisition_month,
    m.aquisition_year,
    m.additional_information,
    extra.cog_folder,
    extra.cog_name,
    extra.cog_url,
    extra.label_source,
    extra.label_quality,
    extra.label_type,
    extra.thumbnail_src
   FROM ((ds
     LEFT JOIN dev_metadata m ON ((m.dataset_id = ds.id)))
     LEFT JOIN extra ON ((extra.dataset_id = ds.id)));


create or replace view "public"."dev_queue_positions" as  WITH positions AS (
         SELECT row_number() OVER (ORDER BY dev_queue.priority DESC, dev_queue.created_at) AS current_position,
            dev_queue.id,
            dev_queue.dataset_id,
            dev_queue.user_id,
            dev_queue.build_args,
            dev_queue.created_at,
            dev_queue.is_processing,
            dev_queue.priority,
            dev_queue.task_type,
            dev_queue.task_types
           FROM dev_queue
          WHERE (NOT dev_queue.is_processing)
          ORDER BY dev_queue.priority DESC, dev_queue.created_at
        ), avg_time AS (
         SELECT avg(dev_cogs.runtime) AS avg
           FROM dev_cogs
        )
 SELECT (avg_time.avg * (positions.current_position)::double precision) AS estimated_time,
    positions.current_position,
    positions.id,
    positions.dataset_id,
    positions.user_id,
    positions.build_args,
    positions.created_at,
    positions.is_processing,
    positions.priority,
    positions.task_type,
    positions.task_types,
    avg_time.avg
   FROM positions,
    avg_time;


create or replace view "public"."metadata_dev_egu_view" as  SELECT upload_files_dev.id,
    upload_files_dev.uuid,
    upload_files_dev.user_id,
    upload_files_dev.aquisition_date,
    upload_files_dev.license,
    upload_files_dev.platform,
    upload_files_dev.status,
    upload_files_dev.wms_source,
    upload_files_dev.bbox,
    upload_files_dev.file_id,
    upload_files_dev.file_name,
    upload_files_dev.file_size,
    metadata_dev_egu.project_id,
    metadata_dev_egu.authors_image,
    metadata_dev_egu.label_type,
    metadata_dev_egu.label_source,
    metadata_dev_egu.image_spectral_properties,
    metadata_dev_egu.citation_doi,
    metadata_dev_egu.label_quality,
    metadata_dev_egu.has_labels,
    metadata_dev_egu.public,
    metadata_dev_egu.display_filename,
    metadata_dev_egu."gadm_NAME_0",
    metadata_dev_egu."gadm_NAME_1",
    metadata_dev_egu."gadm_NAME_2",
    metadata_dev_egu."gadm_NAME_3"
   FROM ((upload_files_dev
     LEFT JOIN labels_dev_egu ON ((upload_files_dev.file_name = labels_dev_egu.ortho_file_name)))
     LEFT JOIN metadata_dev_egu ON ((upload_files_dev.file_name = metadata_dev_egu.filename)));


create or replace view "public"."metadata_dev_egu_view_v2" as  SELECT DISTINCT ON (metadata_dev_egu_v2.filename) metadata_dev_egu_v2.filename AS file_name,
    metadata_dev_egu_v2.project_id,
    metadata_dev_egu_v2.authors_image,
    metadata_dev_egu_v2.label_type,
    metadata_dev_egu_v2.label_source,
    metadata_dev_egu_v2.image_spectral_properties,
    metadata_dev_egu_v2.citation_doi,
    metadata_dev_egu_v2.label_quality,
    metadata_dev_egu_v2.has_labels,
    metadata_dev_egu_v2.public,
    metadata_dev_egu_v2.display_filename,
    metadata_dev_egu_v2."gadm_NAME_0",
    metadata_dev_egu_v2."gadm_NAME_1",
    metadata_dev_egu_v2."gadm_NAME_2",
    metadata_dev_egu_v2."gadm_NAME_3",
    metadata_dev_egu_v2.license,
    metadata_dev_egu_v2.image_platform AS platform,
    metadata_dev_egu_v2.acquisition_date_generated AS aquisition_date,
    metadata_dev_egu_v2.centroid,
    upload_files_dev.uuid,
    upload_files_dev.status,
    upload_files_dev.wms_source,
    upload_files_dev.bbox,
    upload_files_dev.file_id,
    upload_files_dev.file_size
   FROM (metadata_dev_egu_v2
     LEFT JOIN upload_files_dev ON ((metadata_dev_egu_v2.filename = upload_files_dev.file_name)));


create or replace view "public"."v1_dataset_logs" as  SELECT logs.dataset_id,
    json_agg(logs.*) AS logs
   FROM logs
  GROUP BY logs.dataset_id;


create or replace view "public"."v1_full_dataset_view" as  WITH ds AS (
         SELECT v1_datasets.id,
            v1_datasets.file_name,
            v1_datasets.file_size,
            v1_datasets.bbox,
            v1_datasets.status,
            v1_datasets.created_at,
            v1_datasets.copy_time,
            v1_datasets.sha256,
            v1_datasets.file_alias
           FROM v1_datasets
        ), extra AS (
         SELECT ds_1.id AS dataset_id,
            cog.cog_folder,
            cog.cog_name,
            cog.cog_url,
            lab.label_source,
            lab.label_quality,
            lab.label_type,
            thumb.thumbnail_path
           FROM (((v1_datasets ds_1
             LEFT JOIN v1_cogs cog ON ((cog.dataset_id = ds_1.id)))
             LEFT JOIN v1_labels lab ON ((lab.dataset_id = ds_1.id)))
             LEFT JOIN v1_thumbnails thumb ON ((thumb.dataset_id = ds_1.id)))
        )
 SELECT ds.id,
    ds.file_name,
    ds.file_size,
    ds.bbox,
    ds.status,
    ds.created_at,
    ds.copy_time,
    ds.sha256,
    ds.file_alias,
    m.dataset_id,
    m.user_id,
    m.name,
    m.license,
    m.platform,
    m.project_id,
    m.authors,
    m.spectral_properties,
    m.citation_doi,
    m.admin_level_1,
    m.admin_level_2,
    m.admin_level_3,
    m.aquisition_day,
    m.aquisition_month,
    m.aquisition_year,
    m.additional_information,
    extra.cog_folder,
    extra.cog_name,
    extra.cog_url,
    extra.label_source,
    extra.label_quality,
    extra.label_type,
    extra.thumbnail_path
   FROM ((ds
     LEFT JOIN v1_metadata m ON ((m.dataset_id = ds.id)))
     LEFT JOIN extra ON ((extra.dataset_id = ds.id)));


create or replace view "public"."v1_queue_positions" as  WITH positions AS (
         SELECT row_number() OVER (ORDER BY v1_queue.priority DESC, v1_queue.created_at) AS current_position,
            v1_queue.id,
            v1_queue.dataset_id,
            v1_queue.user_id,
            v1_queue.build_args,
            v1_queue.created_at,
            v1_queue.is_processing,
            v1_queue.priority,
            v1_queue.task_type
           FROM v1_queue
          WHERE (NOT v1_queue.is_processing)
          ORDER BY v1_queue.priority DESC, v1_queue.created_at
        ), avg_time AS (
         SELECT avg(v1_cogs.runtime) AS avg
           FROM v1_cogs
        )
 SELECT (avg_time.avg * (positions.current_position)::double precision) AS estimated_time,
    positions.current_position,
    positions.id,
    positions.dataset_id,
    positions.user_id,
    positions.build_args,
    positions.created_at,
    positions.is_processing,
    positions.priority,
    positions.task_type,
    avg_time.avg
   FROM positions,
    avg_time;


grant delete on table "public"."collaborators" to "anon";

grant insert on table "public"."collaborators" to "anon";

grant references on table "public"."collaborators" to "anon";

grant select on table "public"."collaborators" to "anon";

grant trigger on table "public"."collaborators" to "anon";

grant truncate on table "public"."collaborators" to "anon";

grant update on table "public"."collaborators" to "anon";

grant delete on table "public"."collaborators" to "authenticated";

grant insert on table "public"."collaborators" to "authenticated";

grant references on table "public"."collaborators" to "authenticated";

grant select on table "public"."collaborators" to "authenticated";

grant trigger on table "public"."collaborators" to "authenticated";

grant truncate on table "public"."collaborators" to "authenticated";

grant update on table "public"."collaborators" to "authenticated";

grant delete on table "public"."collaborators" to "service_role";

grant insert on table "public"."collaborators" to "service_role";

grant references on table "public"."collaborators" to "service_role";

grant select on table "public"."collaborators" to "service_role";

grant trigger on table "public"."collaborators" to "service_role";

grant truncate on table "public"."collaborators" to "service_role";

grant update on table "public"."collaborators" to "service_role";

grant delete on table "public"."database_stats" to "anon";

grant insert on table "public"."database_stats" to "anon";

grant references on table "public"."database_stats" to "anon";

grant select on table "public"."database_stats" to "anon";

grant trigger on table "public"."database_stats" to "anon";

grant truncate on table "public"."database_stats" to "anon";

grant update on table "public"."database_stats" to "anon";

grant delete on table "public"."database_stats" to "authenticated";

grant insert on table "public"."database_stats" to "authenticated";

grant references on table "public"."database_stats" to "authenticated";

grant select on table "public"."database_stats" to "authenticated";

grant trigger on table "public"."database_stats" to "authenticated";

grant truncate on table "public"."database_stats" to "authenticated";

grant update on table "public"."database_stats" to "authenticated";

grant delete on table "public"."database_stats" to "service_role";

grant insert on table "public"."database_stats" to "service_role";

grant references on table "public"."database_stats" to "service_role";

grant select on table "public"."database_stats" to "service_role";

grant trigger on table "public"."database_stats" to "service_role";

grant truncate on table "public"."database_stats" to "service_role";

grant update on table "public"."database_stats" to "service_role";

grant delete on table "public"."deadtrees_logs" to "anon";

grant insert on table "public"."deadtrees_logs" to "anon";

grant references on table "public"."deadtrees_logs" to "anon";

grant select on table "public"."deadtrees_logs" to "anon";

grant trigger on table "public"."deadtrees_logs" to "anon";

grant truncate on table "public"."deadtrees_logs" to "anon";

grant update on table "public"."deadtrees_logs" to "anon";

grant delete on table "public"."deadtrees_logs" to "authenticated";

grant insert on table "public"."deadtrees_logs" to "authenticated";

grant references on table "public"."deadtrees_logs" to "authenticated";

grant select on table "public"."deadtrees_logs" to "authenticated";

grant trigger on table "public"."deadtrees_logs" to "authenticated";

grant truncate on table "public"."deadtrees_logs" to "authenticated";

grant update on table "public"."deadtrees_logs" to "authenticated";

grant delete on table "public"."deadtrees_logs" to "service_role";

grant insert on table "public"."deadtrees_logs" to "service_role";

grant references on table "public"."deadtrees_logs" to "service_role";

grant select on table "public"."deadtrees_logs" to "service_role";

grant trigger on table "public"."deadtrees_logs" to "service_role";

grant truncate on table "public"."deadtrees_logs" to "service_role";

grant update on table "public"."deadtrees_logs" to "service_role";

grant delete on table "public"."dev_cogs" to "anon";

grant insert on table "public"."dev_cogs" to "anon";

grant references on table "public"."dev_cogs" to "anon";

grant select on table "public"."dev_cogs" to "anon";

grant trigger on table "public"."dev_cogs" to "anon";

grant truncate on table "public"."dev_cogs" to "anon";

grant update on table "public"."dev_cogs" to "anon";

grant delete on table "public"."dev_cogs" to "authenticated";

grant insert on table "public"."dev_cogs" to "authenticated";

grant references on table "public"."dev_cogs" to "authenticated";

grant select on table "public"."dev_cogs" to "authenticated";

grant trigger on table "public"."dev_cogs" to "authenticated";

grant truncate on table "public"."dev_cogs" to "authenticated";

grant update on table "public"."dev_cogs" to "authenticated";

grant delete on table "public"."dev_cogs" to "service_role";

grant insert on table "public"."dev_cogs" to "service_role";

grant references on table "public"."dev_cogs" to "service_role";

grant select on table "public"."dev_cogs" to "service_role";

grant trigger on table "public"."dev_cogs" to "service_role";

grant truncate on table "public"."dev_cogs" to "service_role";

grant update on table "public"."dev_cogs" to "service_role";

grant delete on table "public"."dev_datasets" to "anon";

grant insert on table "public"."dev_datasets" to "anon";

grant references on table "public"."dev_datasets" to "anon";

grant select on table "public"."dev_datasets" to "anon";

grant trigger on table "public"."dev_datasets" to "anon";

grant truncate on table "public"."dev_datasets" to "anon";

grant update on table "public"."dev_datasets" to "anon";

grant delete on table "public"."dev_datasets" to "authenticated";

grant insert on table "public"."dev_datasets" to "authenticated";

grant references on table "public"."dev_datasets" to "authenticated";

grant select on table "public"."dev_datasets" to "authenticated";

grant trigger on table "public"."dev_datasets" to "authenticated";

grant truncate on table "public"."dev_datasets" to "authenticated";

grant update on table "public"."dev_datasets" to "authenticated";

grant delete on table "public"."dev_datasets" to "service_role";

grant insert on table "public"."dev_datasets" to "service_role";

grant references on table "public"."dev_datasets" to "service_role";

grant select on table "public"."dev_datasets" to "service_role";

grant trigger on table "public"."dev_datasets" to "service_role";

grant truncate on table "public"."dev_datasets" to "service_role";

grant update on table "public"."dev_datasets" to "service_role";

grant delete on table "public"."dev_geotiff_info" to "anon";

grant insert on table "public"."dev_geotiff_info" to "anon";

grant references on table "public"."dev_geotiff_info" to "anon";

grant select on table "public"."dev_geotiff_info" to "anon";

grant trigger on table "public"."dev_geotiff_info" to "anon";

grant truncate on table "public"."dev_geotiff_info" to "anon";

grant update on table "public"."dev_geotiff_info" to "anon";

grant delete on table "public"."dev_geotiff_info" to "authenticated";

grant insert on table "public"."dev_geotiff_info" to "authenticated";

grant references on table "public"."dev_geotiff_info" to "authenticated";

grant select on table "public"."dev_geotiff_info" to "authenticated";

grant trigger on table "public"."dev_geotiff_info" to "authenticated";

grant truncate on table "public"."dev_geotiff_info" to "authenticated";

grant update on table "public"."dev_geotiff_info" to "authenticated";

grant delete on table "public"."dev_geotiff_info" to "service_role";

grant insert on table "public"."dev_geotiff_info" to "service_role";

grant references on table "public"."dev_geotiff_info" to "service_role";

grant select on table "public"."dev_geotiff_info" to "service_role";

grant trigger on table "public"."dev_geotiff_info" to "service_role";

grant truncate on table "public"."dev_geotiff_info" to "service_role";

grant update on table "public"."dev_geotiff_info" to "service_role";

grant delete on table "public"."dev_label_objects" to "anon";

grant insert on table "public"."dev_label_objects" to "anon";

grant references on table "public"."dev_label_objects" to "anon";

grant select on table "public"."dev_label_objects" to "anon";

grant trigger on table "public"."dev_label_objects" to "anon";

grant truncate on table "public"."dev_label_objects" to "anon";

grant update on table "public"."dev_label_objects" to "anon";

grant delete on table "public"."dev_label_objects" to "authenticated";

grant insert on table "public"."dev_label_objects" to "authenticated";

grant references on table "public"."dev_label_objects" to "authenticated";

grant select on table "public"."dev_label_objects" to "authenticated";

grant trigger on table "public"."dev_label_objects" to "authenticated";

grant truncate on table "public"."dev_label_objects" to "authenticated";

grant update on table "public"."dev_label_objects" to "authenticated";

grant delete on table "public"."dev_label_objects" to "service_role";

grant insert on table "public"."dev_label_objects" to "service_role";

grant references on table "public"."dev_label_objects" to "service_role";

grant select on table "public"."dev_label_objects" to "service_role";

grant trigger on table "public"."dev_label_objects" to "service_role";

grant truncate on table "public"."dev_label_objects" to "service_role";

grant update on table "public"."dev_label_objects" to "service_role";

grant delete on table "public"."dev_labels" to "anon";

grant insert on table "public"."dev_labels" to "anon";

grant references on table "public"."dev_labels" to "anon";

grant select on table "public"."dev_labels" to "anon";

grant trigger on table "public"."dev_labels" to "anon";

grant truncate on table "public"."dev_labels" to "anon";

grant update on table "public"."dev_labels" to "anon";

grant delete on table "public"."dev_labels" to "authenticated";

grant insert on table "public"."dev_labels" to "authenticated";

grant references on table "public"."dev_labels" to "authenticated";

grant select on table "public"."dev_labels" to "authenticated";

grant trigger on table "public"."dev_labels" to "authenticated";

grant truncate on table "public"."dev_labels" to "authenticated";

grant update on table "public"."dev_labels" to "authenticated";

grant delete on table "public"."dev_labels" to "service_role";

grant insert on table "public"."dev_labels" to "service_role";

grant references on table "public"."dev_labels" to "service_role";

grant select on table "public"."dev_labels" to "service_role";

grant trigger on table "public"."dev_labels" to "service_role";

grant truncate on table "public"."dev_labels" to "service_role";

grant update on table "public"."dev_labels" to "service_role";

grant delete on table "public"."dev_logs" to "anon";

grant insert on table "public"."dev_logs" to "anon";

grant references on table "public"."dev_logs" to "anon";

grant select on table "public"."dev_logs" to "anon";

grant trigger on table "public"."dev_logs" to "anon";

grant truncate on table "public"."dev_logs" to "anon";

grant update on table "public"."dev_logs" to "anon";

grant delete on table "public"."dev_logs" to "authenticated";

grant insert on table "public"."dev_logs" to "authenticated";

grant references on table "public"."dev_logs" to "authenticated";

grant select on table "public"."dev_logs" to "authenticated";

grant trigger on table "public"."dev_logs" to "authenticated";

grant truncate on table "public"."dev_logs" to "authenticated";

grant update on table "public"."dev_logs" to "authenticated";

grant delete on table "public"."dev_logs" to "service_role";

grant insert on table "public"."dev_logs" to "service_role";

grant references on table "public"."dev_logs" to "service_role";

grant select on table "public"."dev_logs" to "service_role";

grant trigger on table "public"."dev_logs" to "service_role";

grant truncate on table "public"."dev_logs" to "service_role";

grant update on table "public"."dev_logs" to "service_role";

grant delete on table "public"."dev_metadata" to "anon";

grant insert on table "public"."dev_metadata" to "anon";

grant references on table "public"."dev_metadata" to "anon";

grant select on table "public"."dev_metadata" to "anon";

grant trigger on table "public"."dev_metadata" to "anon";

grant truncate on table "public"."dev_metadata" to "anon";

grant update on table "public"."dev_metadata" to "anon";

grant delete on table "public"."dev_metadata" to "authenticated";

grant insert on table "public"."dev_metadata" to "authenticated";

grant references on table "public"."dev_metadata" to "authenticated";

grant select on table "public"."dev_metadata" to "authenticated";

grant trigger on table "public"."dev_metadata" to "authenticated";

grant truncate on table "public"."dev_metadata" to "authenticated";

grant update on table "public"."dev_metadata" to "authenticated";

grant delete on table "public"."dev_metadata" to "service_role";

grant insert on table "public"."dev_metadata" to "service_role";

grant references on table "public"."dev_metadata" to "service_role";

grant select on table "public"."dev_metadata" to "service_role";

grant trigger on table "public"."dev_metadata" to "service_role";

grant truncate on table "public"."dev_metadata" to "service_role";

grant update on table "public"."dev_metadata" to "service_role";

grant delete on table "public"."dev_queue" to "anon";

grant insert on table "public"."dev_queue" to "anon";

grant references on table "public"."dev_queue" to "anon";

grant select on table "public"."dev_queue" to "anon";

grant trigger on table "public"."dev_queue" to "anon";

grant truncate on table "public"."dev_queue" to "anon";

grant update on table "public"."dev_queue" to "anon";

grant delete on table "public"."dev_queue" to "authenticated";

grant insert on table "public"."dev_queue" to "authenticated";

grant references on table "public"."dev_queue" to "authenticated";

grant select on table "public"."dev_queue" to "authenticated";

grant trigger on table "public"."dev_queue" to "authenticated";

grant truncate on table "public"."dev_queue" to "authenticated";

grant update on table "public"."dev_queue" to "authenticated";

grant delete on table "public"."dev_queue" to "service_role";

grant insert on table "public"."dev_queue" to "service_role";

grant references on table "public"."dev_queue" to "service_role";

grant select on table "public"."dev_queue" to "service_role";

grant trigger on table "public"."dev_queue" to "service_role";

grant truncate on table "public"."dev_queue" to "service_role";

grant update on table "public"."dev_queue" to "service_role";

grant delete on table "public"."dev_thumbnails" to "anon";

grant insert on table "public"."dev_thumbnails" to "anon";

grant references on table "public"."dev_thumbnails" to "anon";

grant select on table "public"."dev_thumbnails" to "anon";

grant trigger on table "public"."dev_thumbnails" to "anon";

grant truncate on table "public"."dev_thumbnails" to "anon";

grant update on table "public"."dev_thumbnails" to "anon";

grant delete on table "public"."dev_thumbnails" to "authenticated";

grant insert on table "public"."dev_thumbnails" to "authenticated";

grant references on table "public"."dev_thumbnails" to "authenticated";

grant select on table "public"."dev_thumbnails" to "authenticated";

grant trigger on table "public"."dev_thumbnails" to "authenticated";

grant truncate on table "public"."dev_thumbnails" to "authenticated";

grant update on table "public"."dev_thumbnails" to "authenticated";

grant delete on table "public"."dev_thumbnails" to "service_role";

grant insert on table "public"."dev_thumbnails" to "service_role";

grant references on table "public"."dev_thumbnails" to "service_role";

grant select on table "public"."dev_thumbnails" to "service_role";

grant trigger on table "public"."dev_thumbnails" to "service_role";

grant truncate on table "public"."dev_thumbnails" to "service_role";

grant update on table "public"."dev_thumbnails" to "service_role";

grant delete on table "public"."labels_dev_egu" to "anon";

grant insert on table "public"."labels_dev_egu" to "anon";

grant references on table "public"."labels_dev_egu" to "anon";

grant select on table "public"."labels_dev_egu" to "anon";

grant trigger on table "public"."labels_dev_egu" to "anon";

grant truncate on table "public"."labels_dev_egu" to "anon";

grant update on table "public"."labels_dev_egu" to "anon";

grant delete on table "public"."labels_dev_egu" to "authenticated";

grant insert on table "public"."labels_dev_egu" to "authenticated";

grant references on table "public"."labels_dev_egu" to "authenticated";

grant select on table "public"."labels_dev_egu" to "authenticated";

grant trigger on table "public"."labels_dev_egu" to "authenticated";

grant truncate on table "public"."labels_dev_egu" to "authenticated";

grant update on table "public"."labels_dev_egu" to "authenticated";

grant delete on table "public"."labels_dev_egu" to "service_role";

grant insert on table "public"."labels_dev_egu" to "service_role";

grant references on table "public"."labels_dev_egu" to "service_role";

grant select on table "public"."labels_dev_egu" to "service_role";

grant trigger on table "public"."labels_dev_egu" to "service_role";

grant truncate on table "public"."labels_dev_egu" to "service_role";

grant update on table "public"."labels_dev_egu" to "service_role";

grant delete on table "public"."logs" to "anon";

grant insert on table "public"."logs" to "anon";

grant references on table "public"."logs" to "anon";

grant select on table "public"."logs" to "anon";

grant trigger on table "public"."logs" to "anon";

grant truncate on table "public"."logs" to "anon";

grant update on table "public"."logs" to "anon";

grant delete on table "public"."logs" to "authenticated";

grant insert on table "public"."logs" to "authenticated";

grant references on table "public"."logs" to "authenticated";

grant select on table "public"."logs" to "authenticated";

grant trigger on table "public"."logs" to "authenticated";

grant truncate on table "public"."logs" to "authenticated";

grant update on table "public"."logs" to "authenticated";

grant delete on table "public"."logs" to "service_role";

grant insert on table "public"."logs" to "service_role";

grant references on table "public"."logs" to "service_role";

grant select on table "public"."logs" to "service_role";

grant trigger on table "public"."logs" to "service_role";

grant truncate on table "public"."logs" to "service_role";

grant update on table "public"."logs" to "service_role";

grant delete on table "public"."metadata_dev_egu" to "anon";

grant insert on table "public"."metadata_dev_egu" to "anon";

grant references on table "public"."metadata_dev_egu" to "anon";

grant select on table "public"."metadata_dev_egu" to "anon";

grant trigger on table "public"."metadata_dev_egu" to "anon";

grant truncate on table "public"."metadata_dev_egu" to "anon";

grant update on table "public"."metadata_dev_egu" to "anon";

grant delete on table "public"."metadata_dev_egu" to "authenticated";

grant insert on table "public"."metadata_dev_egu" to "authenticated";

grant references on table "public"."metadata_dev_egu" to "authenticated";

grant select on table "public"."metadata_dev_egu" to "authenticated";

grant trigger on table "public"."metadata_dev_egu" to "authenticated";

grant truncate on table "public"."metadata_dev_egu" to "authenticated";

grant update on table "public"."metadata_dev_egu" to "authenticated";

grant delete on table "public"."metadata_dev_egu" to "service_role";

grant insert on table "public"."metadata_dev_egu" to "service_role";

grant references on table "public"."metadata_dev_egu" to "service_role";

grant select on table "public"."metadata_dev_egu" to "service_role";

grant trigger on table "public"."metadata_dev_egu" to "service_role";

grant truncate on table "public"."metadata_dev_egu" to "service_role";

grant update on table "public"."metadata_dev_egu" to "service_role";

grant delete on table "public"."metadata_dev_egu_v2" to "anon";

grant insert on table "public"."metadata_dev_egu_v2" to "anon";

grant references on table "public"."metadata_dev_egu_v2" to "anon";

grant select on table "public"."metadata_dev_egu_v2" to "anon";

grant trigger on table "public"."metadata_dev_egu_v2" to "anon";

grant truncate on table "public"."metadata_dev_egu_v2" to "anon";

grant update on table "public"."metadata_dev_egu_v2" to "anon";

grant delete on table "public"."metadata_dev_egu_v2" to "authenticated";

grant insert on table "public"."metadata_dev_egu_v2" to "authenticated";

grant references on table "public"."metadata_dev_egu_v2" to "authenticated";

grant select on table "public"."metadata_dev_egu_v2" to "authenticated";

grant trigger on table "public"."metadata_dev_egu_v2" to "authenticated";

grant truncate on table "public"."metadata_dev_egu_v2" to "authenticated";

grant update on table "public"."metadata_dev_egu_v2" to "authenticated";

grant delete on table "public"."metadata_dev_egu_v2" to "service_role";

grant insert on table "public"."metadata_dev_egu_v2" to "service_role";

grant references on table "public"."metadata_dev_egu_v2" to "service_role";

grant select on table "public"."metadata_dev_egu_v2" to "service_role";

grant trigger on table "public"."metadata_dev_egu_v2" to "service_role";

grant truncate on table "public"."metadata_dev_egu_v2" to "service_role";

grant update on table "public"."metadata_dev_egu_v2" to "service_role";

grant delete on table "public"."newsletter" to "anon";

grant insert on table "public"."newsletter" to "anon";

grant references on table "public"."newsletter" to "anon";

grant select on table "public"."newsletter" to "anon";

grant trigger on table "public"."newsletter" to "anon";

grant truncate on table "public"."newsletter" to "anon";

grant update on table "public"."newsletter" to "anon";

grant delete on table "public"."newsletter" to "authenticated";

grant insert on table "public"."newsletter" to "authenticated";

grant references on table "public"."newsletter" to "authenticated";

grant select on table "public"."newsletter" to "authenticated";

grant trigger on table "public"."newsletter" to "authenticated";

grant truncate on table "public"."newsletter" to "authenticated";

grant update on table "public"."newsletter" to "authenticated";

grant delete on table "public"."newsletter" to "service_role";

grant insert on table "public"."newsletter" to "service_role";

grant references on table "public"."newsletter" to "service_role";

grant select on table "public"."newsletter" to "service_role";

grant trigger on table "public"."newsletter" to "service_role";

grant truncate on table "public"."newsletter" to "service_role";

grant update on table "public"."newsletter" to "service_role";

grant delete on table "public"."presentations" to "anon";

grant insert on table "public"."presentations" to "anon";

grant references on table "public"."presentations" to "anon";

grant select on table "public"."presentations" to "anon";

grant trigger on table "public"."presentations" to "anon";

grant truncate on table "public"."presentations" to "anon";

grant update on table "public"."presentations" to "anon";

grant delete on table "public"."presentations" to "authenticated";

grant insert on table "public"."presentations" to "authenticated";

grant references on table "public"."presentations" to "authenticated";

grant select on table "public"."presentations" to "authenticated";

grant trigger on table "public"."presentations" to "authenticated";

grant truncate on table "public"."presentations" to "authenticated";

grant update on table "public"."presentations" to "authenticated";

grant delete on table "public"."presentations" to "service_role";

grant insert on table "public"."presentations" to "service_role";

grant references on table "public"."presentations" to "service_role";

grant select on table "public"."presentations" to "service_role";

grant trigger on table "public"."presentations" to "service_role";

grant truncate on table "public"."presentations" to "service_role";

grant update on table "public"."presentations" to "service_role";

grant delete on table "public"."projects" to "anon";

grant insert on table "public"."projects" to "anon";

grant references on table "public"."projects" to "anon";

grant select on table "public"."projects" to "anon";

grant trigger on table "public"."projects" to "anon";

grant truncate on table "public"."projects" to "anon";

grant update on table "public"."projects" to "anon";

grant delete on table "public"."projects" to "authenticated";

grant insert on table "public"."projects" to "authenticated";

grant references on table "public"."projects" to "authenticated";

grant select on table "public"."projects" to "authenticated";

grant trigger on table "public"."projects" to "authenticated";

grant truncate on table "public"."projects" to "authenticated";

grant update on table "public"."projects" to "authenticated";

grant delete on table "public"."projects" to "service_role";

grant insert on table "public"."projects" to "service_role";

grant references on table "public"."projects" to "service_role";

grant select on table "public"."projects" to "service_role";

grant trigger on table "public"."projects" to "service_role";

grant truncate on table "public"."projects" to "service_role";

grant update on table "public"."projects" to "service_role";

grant delete on table "public"."publications" to "anon";

grant insert on table "public"."publications" to "anon";

grant references on table "public"."publications" to "anon";

grant select on table "public"."publications" to "anon";

grant trigger on table "public"."publications" to "anon";

grant truncate on table "public"."publications" to "anon";

grant update on table "public"."publications" to "anon";

grant delete on table "public"."publications" to "authenticated";

grant insert on table "public"."publications" to "authenticated";

grant references on table "public"."publications" to "authenticated";

grant select on table "public"."publications" to "authenticated";

grant trigger on table "public"."publications" to "authenticated";

grant truncate on table "public"."publications" to "authenticated";

grant update on table "public"."publications" to "authenticated";

grant delete on table "public"."publications" to "service_role";

grant insert on table "public"."publications" to "service_role";

grant references on table "public"."publications" to "service_role";

grant select on table "public"."publications" to "service_role";

grant trigger on table "public"."publications" to "service_role";

grant truncate on table "public"."publications" to "service_role";

grant update on table "public"."publications" to "service_role";

grant delete on table "public"."upload_files_dev" to "anon";

grant insert on table "public"."upload_files_dev" to "anon";

grant references on table "public"."upload_files_dev" to "anon";

grant select on table "public"."upload_files_dev" to "anon";

grant trigger on table "public"."upload_files_dev" to "anon";

grant truncate on table "public"."upload_files_dev" to "anon";

grant update on table "public"."upload_files_dev" to "anon";

grant delete on table "public"."upload_files_dev" to "authenticated";

grant insert on table "public"."upload_files_dev" to "authenticated";

grant references on table "public"."upload_files_dev" to "authenticated";

grant select on table "public"."upload_files_dev" to "authenticated";

grant trigger on table "public"."upload_files_dev" to "authenticated";

grant truncate on table "public"."upload_files_dev" to "authenticated";

grant update on table "public"."upload_files_dev" to "authenticated";

grant delete on table "public"."upload_files_dev" to "service_role";

grant insert on table "public"."upload_files_dev" to "service_role";

grant references on table "public"."upload_files_dev" to "service_role";

grant select on table "public"."upload_files_dev" to "service_role";

grant trigger on table "public"."upload_files_dev" to "service_role";

grant truncate on table "public"."upload_files_dev" to "service_role";

grant update on table "public"."upload_files_dev" to "service_role";

grant delete on table "public"."v1_cogs" to "anon";

grant insert on table "public"."v1_cogs" to "anon";

grant references on table "public"."v1_cogs" to "anon";

grant select on table "public"."v1_cogs" to "anon";

grant trigger on table "public"."v1_cogs" to "anon";

grant truncate on table "public"."v1_cogs" to "anon";

grant update on table "public"."v1_cogs" to "anon";

grant delete on table "public"."v1_cogs" to "authenticated";

grant insert on table "public"."v1_cogs" to "authenticated";

grant references on table "public"."v1_cogs" to "authenticated";

grant select on table "public"."v1_cogs" to "authenticated";

grant trigger on table "public"."v1_cogs" to "authenticated";

grant truncate on table "public"."v1_cogs" to "authenticated";

grant update on table "public"."v1_cogs" to "authenticated";

grant delete on table "public"."v1_cogs" to "service_role";

grant insert on table "public"."v1_cogs" to "service_role";

grant references on table "public"."v1_cogs" to "service_role";

grant select on table "public"."v1_cogs" to "service_role";

grant trigger on table "public"."v1_cogs" to "service_role";

grant truncate on table "public"."v1_cogs" to "service_role";

grant update on table "public"."v1_cogs" to "service_role";

grant delete on table "public"."v1_datasets" to "anon";

grant insert on table "public"."v1_datasets" to "anon";

grant references on table "public"."v1_datasets" to "anon";

grant select on table "public"."v1_datasets" to "anon";

grant trigger on table "public"."v1_datasets" to "anon";

grant truncate on table "public"."v1_datasets" to "anon";

grant update on table "public"."v1_datasets" to "anon";

grant delete on table "public"."v1_datasets" to "authenticated";

grant insert on table "public"."v1_datasets" to "authenticated";

grant references on table "public"."v1_datasets" to "authenticated";

grant select on table "public"."v1_datasets" to "authenticated";

grant trigger on table "public"."v1_datasets" to "authenticated";

grant truncate on table "public"."v1_datasets" to "authenticated";

grant update on table "public"."v1_datasets" to "authenticated";

grant delete on table "public"."v1_datasets" to "service_role";

grant insert on table "public"."v1_datasets" to "service_role";

grant references on table "public"."v1_datasets" to "service_role";

grant select on table "public"."v1_datasets" to "service_role";

grant trigger on table "public"."v1_datasets" to "service_role";

grant truncate on table "public"."v1_datasets" to "service_role";

grant update on table "public"."v1_datasets" to "service_role";

grant delete on table "public"."v1_geotiff_info" to "anon";

grant insert on table "public"."v1_geotiff_info" to "anon";

grant references on table "public"."v1_geotiff_info" to "anon";

grant select on table "public"."v1_geotiff_info" to "anon";

grant trigger on table "public"."v1_geotiff_info" to "anon";

grant truncate on table "public"."v1_geotiff_info" to "anon";

grant update on table "public"."v1_geotiff_info" to "anon";

grant delete on table "public"."v1_geotiff_info" to "authenticated";

grant insert on table "public"."v1_geotiff_info" to "authenticated";

grant references on table "public"."v1_geotiff_info" to "authenticated";

grant select on table "public"."v1_geotiff_info" to "authenticated";

grant trigger on table "public"."v1_geotiff_info" to "authenticated";

grant truncate on table "public"."v1_geotiff_info" to "authenticated";

grant update on table "public"."v1_geotiff_info" to "authenticated";

grant delete on table "public"."v1_geotiff_info" to "service_role";

grant insert on table "public"."v1_geotiff_info" to "service_role";

grant references on table "public"."v1_geotiff_info" to "service_role";

grant select on table "public"."v1_geotiff_info" to "service_role";

grant trigger on table "public"."v1_geotiff_info" to "service_role";

grant truncate on table "public"."v1_geotiff_info" to "service_role";

grant update on table "public"."v1_geotiff_info" to "service_role";

grant delete on table "public"."v1_label_objects" to "anon";

grant insert on table "public"."v1_label_objects" to "anon";

grant references on table "public"."v1_label_objects" to "anon";

grant select on table "public"."v1_label_objects" to "anon";

grant trigger on table "public"."v1_label_objects" to "anon";

grant truncate on table "public"."v1_label_objects" to "anon";

grant update on table "public"."v1_label_objects" to "anon";

grant delete on table "public"."v1_label_objects" to "authenticated";

grant insert on table "public"."v1_label_objects" to "authenticated";

grant references on table "public"."v1_label_objects" to "authenticated";

grant select on table "public"."v1_label_objects" to "authenticated";

grant trigger on table "public"."v1_label_objects" to "authenticated";

grant truncate on table "public"."v1_label_objects" to "authenticated";

grant update on table "public"."v1_label_objects" to "authenticated";

grant delete on table "public"."v1_label_objects" to "service_role";

grant insert on table "public"."v1_label_objects" to "service_role";

grant references on table "public"."v1_label_objects" to "service_role";

grant select on table "public"."v1_label_objects" to "service_role";

grant trigger on table "public"."v1_label_objects" to "service_role";

grant truncate on table "public"."v1_label_objects" to "service_role";

grant update on table "public"."v1_label_objects" to "service_role";

grant delete on table "public"."v1_labels" to "anon";

grant insert on table "public"."v1_labels" to "anon";

grant references on table "public"."v1_labels" to "anon";

grant select on table "public"."v1_labels" to "anon";

grant trigger on table "public"."v1_labels" to "anon";

grant truncate on table "public"."v1_labels" to "anon";

grant update on table "public"."v1_labels" to "anon";

grant delete on table "public"."v1_labels" to "authenticated";

grant insert on table "public"."v1_labels" to "authenticated";

grant references on table "public"."v1_labels" to "authenticated";

grant select on table "public"."v1_labels" to "authenticated";

grant trigger on table "public"."v1_labels" to "authenticated";

grant truncate on table "public"."v1_labels" to "authenticated";

grant update on table "public"."v1_labels" to "authenticated";

grant delete on table "public"."v1_labels" to "service_role";

grant insert on table "public"."v1_labels" to "service_role";

grant references on table "public"."v1_labels" to "service_role";

grant select on table "public"."v1_labels" to "service_role";

grant trigger on table "public"."v1_labels" to "service_role";

grant truncate on table "public"."v1_labels" to "service_role";

grant update on table "public"."v1_labels" to "service_role";

grant delete on table "public"."v1_metadata" to "anon";

grant insert on table "public"."v1_metadata" to "anon";

grant references on table "public"."v1_metadata" to "anon";

grant select on table "public"."v1_metadata" to "anon";

grant trigger on table "public"."v1_metadata" to "anon";

grant truncate on table "public"."v1_metadata" to "anon";

grant update on table "public"."v1_metadata" to "anon";

grant delete on table "public"."v1_metadata" to "authenticated";

grant insert on table "public"."v1_metadata" to "authenticated";

grant references on table "public"."v1_metadata" to "authenticated";

grant select on table "public"."v1_metadata" to "authenticated";

grant trigger on table "public"."v1_metadata" to "authenticated";

grant truncate on table "public"."v1_metadata" to "authenticated";

grant update on table "public"."v1_metadata" to "authenticated";

grant delete on table "public"."v1_metadata" to "service_role";

grant insert on table "public"."v1_metadata" to "service_role";

grant references on table "public"."v1_metadata" to "service_role";

grant select on table "public"."v1_metadata" to "service_role";

grant trigger on table "public"."v1_metadata" to "service_role";

grant truncate on table "public"."v1_metadata" to "service_role";

grant update on table "public"."v1_metadata" to "service_role";

grant delete on table "public"."v1_queue" to "anon";

grant insert on table "public"."v1_queue" to "anon";

grant references on table "public"."v1_queue" to "anon";

grant select on table "public"."v1_queue" to "anon";

grant trigger on table "public"."v1_queue" to "anon";

grant truncate on table "public"."v1_queue" to "anon";

grant update on table "public"."v1_queue" to "anon";

grant delete on table "public"."v1_queue" to "authenticated";

grant insert on table "public"."v1_queue" to "authenticated";

grant references on table "public"."v1_queue" to "authenticated";

grant select on table "public"."v1_queue" to "authenticated";

grant trigger on table "public"."v1_queue" to "authenticated";

grant truncate on table "public"."v1_queue" to "authenticated";

grant update on table "public"."v1_queue" to "authenticated";

grant delete on table "public"."v1_queue" to "service_role";

grant insert on table "public"."v1_queue" to "service_role";

grant references on table "public"."v1_queue" to "service_role";

grant select on table "public"."v1_queue" to "service_role";

grant trigger on table "public"."v1_queue" to "service_role";

grant truncate on table "public"."v1_queue" to "service_role";

grant update on table "public"."v1_queue" to "service_role";

grant delete on table "public"."v1_thumbnails" to "anon";

grant insert on table "public"."v1_thumbnails" to "anon";

grant references on table "public"."v1_thumbnails" to "anon";

grant select on table "public"."v1_thumbnails" to "anon";

grant trigger on table "public"."v1_thumbnails" to "anon";

grant truncate on table "public"."v1_thumbnails" to "anon";

grant update on table "public"."v1_thumbnails" to "anon";

grant delete on table "public"."v1_thumbnails" to "authenticated";

grant insert on table "public"."v1_thumbnails" to "authenticated";

grant references on table "public"."v1_thumbnails" to "authenticated";

grant select on table "public"."v1_thumbnails" to "authenticated";

grant trigger on table "public"."v1_thumbnails" to "authenticated";

grant truncate on table "public"."v1_thumbnails" to "authenticated";

grant update on table "public"."v1_thumbnails" to "authenticated";

grant delete on table "public"."v1_thumbnails" to "service_role";

grant insert on table "public"."v1_thumbnails" to "service_role";

grant references on table "public"."v1_thumbnails" to "service_role";

grant select on table "public"."v1_thumbnails" to "service_role";

grant trigger on table "public"."v1_thumbnails" to "service_role";

grant truncate on table "public"."v1_thumbnails" to "service_role";

grant update on table "public"."v1_thumbnails" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."dev_datasets"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."dev_datasets"
as permissive
for select
to public
using (true);


create policy "enable all for processor"
on "public"."dev_datasets"
as permissive
for all
to public
using (((( SELECT auth.uid() AS uid) = user_id) OR ((( SELECT auth.jwt() AS jwt) ->> 'email'::text) = 'processor@deadtrees.earth'::text)))
with check (true);


create policy "Enable insert for authenticated users only"
on "public"."dev_label_objects"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."dev_label_objects"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."dev_labels"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."dev_labels"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."dev_logs"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for authenticated users only"
on "public"."dev_logs"
as permissive
for select
to authenticated, anon
using (true);


create policy "Enable insert for authenticated users only"
on "public"."logs"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read for authenticated users only"
on "public"."logs"
as permissive
for select
to authenticated
using (true);


create policy "Enable read access for all users"
on "public"."presentations"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."publications"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."upload_files_dev"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."upload_files_dev"
as permissive
for select
to public
using (true);


create policy "Enable update for admins (all) and authenticated (owned)"
on "public"."upload_files_dev"
as permissive
for update
to authenticated
using ((("right"((auth.jwt() ->> 'email'::text), 16) = '@deadtrees.earth'::text) OR (auth.uid() = user_id)))
with check ((("right"((auth.jwt() ->> 'email'::text), 16) = '@deadtrees.earth'::text) OR (auth.uid() = user_id)));


create policy "Allow user to insert a new entry"
on "public"."v1_cogs"
as permissive
for insert
to public
with check (((( SELECT auth.uid() AS uid) = user_id) OR ((( SELECT auth.jwt() AS jwt) ->> 'email'::text) = 'processor@deadtrees.earth'::text)));


create policy "Enable read access for all users"
on "public"."v1_cogs"
as permissive
for select
to public
using (true);


create policy "allow owner and processor to update a entry"
on "public"."v1_cogs"
as permissive
for update
to public
using (((( SELECT auth.uid() AS uid) = user_id) OR ((( SELECT auth.jwt() AS jwt) ->> 'email'::text) = 'processor@deadtrees.earth'::text)));


create policy "Enable all for users based on user_id"
on "public"."v1_datasets"
as permissive
for all
to public
using (((( SELECT auth.uid() AS uid) = user_id) OR ((( SELECT auth.jwt() AS jwt) ->> 'email'::text) = 'processor@deadtrees.earth'::text)));


create policy "Enable insert for authenticated users only"
on "public"."v1_datasets"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v1_datasets"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."v1_label_objects"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v1_label_objects"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."v1_labels"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v1_labels"
as permissive
for select
to public
using (true);


create policy "Enable edit for users based on user_id"
on "public"."v1_metadata"
as permissive
for all
to public
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable insert for authenticated users only"
on "public"."v1_metadata"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v1_metadata"
as permissive
for select
to public
using (true);


create policy "Enable all only for processor users"
on "public"."v1_queue"
as permissive
for all
to public
using (((( SELECT auth.jwt() AS jwt) ->> 'email'::text) = 'processor@deadtrees.earth'::text))
with check (((( SELECT auth.jwt() AS jwt) ->> 'email'::text) = 'processor@deadtrees.earth'::text));


create policy "Enable insert for authenticated users only"
on "public"."v1_queue"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v1_queue"
as permissive
for select
to authenticated
using (true);


create policy "Enable insert for authenticated users only"
on "public"."v1_thumbnails"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."v1_thumbnails"
as permissive
for select
to public
using (true);


create policy "enable processor to update"
on "public"."v1_thumbnails"
as permissive
for update
to public
using (((( SELECT auth.uid() AS uid) = user_id) OR ((( SELECT auth.jwt() AS jwt) ->> 'email'::text) = 'processor@deadtrees.earth'::text)))
with check (((( SELECT auth.uid() AS uid) = user_id) OR ((( SELECT auth.jwt() AS jwt) ->> 'email'::text) = 'processor@deadtrees.earth'::text)));



