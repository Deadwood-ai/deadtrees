

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "postgis" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."LabelSource" AS ENUM (
    'visual_interpretation',
    'model_prediction',
    'fixed_model_prediction'
);


ALTER TYPE "public"."LabelSource" OWNER TO "postgres";


CREATE TYPE "public"."LabelType" AS ENUM (
    'point_observation',
    'segmentation',
    'instance_segmentation',
    'semantic_segmentation'
);


ALTER TYPE "public"."LabelType" OWNER TO "postgres";


COMMENT ON TYPE "public"."LabelType" IS 'different types of labels';



CREATE TYPE "public"."License" AS ENUM (
    'CC BY',
    'CC BY-SA',
    'CC BY-NC-SA',
    'MIT'
);


ALTER TYPE "public"."License" OWNER TO "postgres";


CREATE TYPE "public"."Platform" AS ENUM (
    'drone',
    'airborne',
    'sattelfite'
);


ALTER TYPE "public"."Platform" OWNER TO "postgres";


CREATE TYPE "public"."Status" AS ENUM (
    'pending',
    'processing',
    'errored',
    'processed',
    'audited',
    'audit_failed',
    'cog_processing',
    'thumbnail_processing',
    'cog_errored',
    'thumbnail_errored',
    'uploading',
    'uploaded',
    'deadwood_prediction',
    'deadwood_errored'
);


ALTER TYPE "public"."Status" OWNER TO "postgres";


CREATE TYPE "public"."access" AS ENUM (
    'public',
    'viewonly',
    'private'
);


ALTER TYPE "public"."access" OWNER TO "postgres";


COMMENT ON TYPE "public"."access" IS 'Data accessibility schema';


SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."collaborators" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "collaborator_text" "text"
);


ALTER TABLE "public"."collaborators" OWNER TO "postgres";


ALTER TABLE "public"."collaborators" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."collaborators_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."database_stats" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "date" "date",
    "area_covered" numeric,
    "orthophotos_count" integer,
    "countries_count" integer,
    "contributors_count" integer
);


ALTER TABLE "public"."database_stats" OWNER TO "postgres";


ALTER TABLE "public"."database_stats" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."database_stats_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."v1_datasets" (
    "id" bigint NOT NULL,
    "file_name" "text" NOT NULL,
    "file_size" bigint,
    "bbox" "extensions"."box2d",
    "status" "public"."Status" DEFAULT 'pending'::"public"."Status" NOT NULL,
    "user_id" "uuid" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "copy_time" numeric NOT NULL,
    "sha256" "text",
    "file_alias" "text"
);


ALTER TABLE "public"."v1_datasets" OWNER TO "postgres";


ALTER TABLE "public"."v1_datasets" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."datasets_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."deadtrees_logs" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "text",
    "process" "text",
    "level" "text",
    "message" "text",
    "file_name" "text"
);


ALTER TABLE "public"."deadtrees_logs" OWNER TO "postgres";


ALTER TABLE "public"."deadtrees_logs" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."deadtrees_logs_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."dev_cogs" (
    "dataset_id" bigint NOT NULL,
    "cog_folder" "text" NOT NULL,
    "cog_name" "text" NOT NULL,
    "cog_url" "text" NOT NULL,
    "cog_size" bigint NOT NULL,
    "runtime" double precision NOT NULL,
    "user_id" "uuid" NOT NULL,
    "compression" "text" NOT NULL,
    "overviews" integer NOT NULL,
    "resolution" integer NOT NULL,
    "blocksize" integer,
    "compression_level" "text",
    "tiling_scheme" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);


ALTER TABLE "public"."dev_cogs" OWNER TO "postgres";


COMMENT ON TABLE "public"."dev_cogs" IS 'This is a duplicate of v1_cogs';



CREATE TABLE IF NOT EXISTS "public"."dev_datasets" (
    "id" bigint NOT NULL,
    "file_name" "text" NOT NULL,
    "file_size" bigint,
    "bbox" "extensions"."box2d",
    "status" "public"."Status" DEFAULT 'pending'::"public"."Status" NOT NULL,
    "user_id" "uuid" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "copy_time" numeric NOT NULL,
    "sha256" "text",
    "file_alias" "text"
);


ALTER TABLE "public"."dev_datasets" OWNER TO "postgres";


COMMENT ON TABLE "public"."dev_datasets" IS 'This is a duplicate of v1_datasets';



ALTER TABLE "public"."dev_datasets" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."dev_datasets_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."dev_metadata" (
    "dataset_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "name" "text" NOT NULL,
    "license" "public"."License",
    "platform" "public"."Platform" NOT NULL,
    "project_id" "text",
    "authors" "text",
    "spectral_properties" "text",
    "citation_doi" "text",
    "admin_level_1" "text",
    "admin_level_2" "text",
    "admin_level_3" "text",
    "aquisition_year" smallint,
    "aquisition_month" smallint,
    "aquisition_day" smallint,
    "additional_information" "text",
    "data_access" "public"."access" DEFAULT 'public'::"public"."access" NOT NULL,
    CONSTRAINT "v1_metadata_aquisition_day_check" CHECK ((("aquisition_day" > 0) AND ("aquisition_day" < 32))),
    CONSTRAINT "v1_metadata_aquisition_month_check" CHECK ((("aquisition_month" < 13) AND ("aquisition_month" > 0))),
    CONSTRAINT "v1_metadata_aquisition_year_check" CHECK ((("aquisition_year" > 1980) AND ("aquisition_year" < 2099)))
);


ALTER TABLE "public"."dev_metadata" OWNER TO "postgres";


COMMENT ON TABLE "public"."dev_metadata" IS 'This is a duplicate of v1_metadata';



CREATE TABLE IF NOT EXISTS "public"."v1_thumbnails" (
    "dataset_id" integer NOT NULL,
    "base64img" "text",
    "user_id" "uuid" NOT NULL,
    "thumbnail_path" "text",
    "runtime" double precision
);


ALTER TABLE "public"."v1_thumbnails" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."v1_thumbnails_dataset_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "public"."v1_thumbnails_dataset_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."v1_thumbnails_dataset_id_seq" OWNED BY "public"."v1_thumbnails"."dataset_id";



CREATE TABLE IF NOT EXISTS "public"."dev_thumbnails" (
    "dataset_id" integer DEFAULT "nextval"('"public"."v1_thumbnails_dataset_id_seq"'::"regclass") NOT NULL,
    "base64img" "text",
    "user_id" "uuid" NOT NULL,
    "thumbnail_path" "text",
    "created_at" timestamp with time zone DEFAULT "now"(),
    "runtime" double precision
);


ALTER TABLE "public"."dev_thumbnails" OWNER TO "postgres";


COMMENT ON TABLE "public"."dev_thumbnails" IS 'This is a duplicate of v1_thumbnails';



CREATE TABLE IF NOT EXISTS "public"."v1_labels" (
    "id" bigint NOT NULL,
    "dataset_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "aoi" "jsonb",
    "label" "jsonb",
    "label_source" "public"."LabelSource" NOT NULL,
    "label_quality" smallint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "label_type" "public"."LabelType" NOT NULL
);


ALTER TABLE "public"."v1_labels" OWNER TO "postgres";


CREATE OR REPLACE VIEW "public"."dev_full_dataset_view" AS
 WITH "ds" AS (
         SELECT "dev_datasets"."id",
            "dev_datasets"."file_name",
            "dev_datasets"."file_size",
            "dev_datasets"."bbox",
            "dev_datasets"."status",
            "dev_datasets"."created_at",
            "dev_datasets"."copy_time",
            "dev_datasets"."sha256",
            "dev_datasets"."file_alias"
           FROM "public"."dev_datasets"
        ), "extra" AS (
         SELECT "ds_1"."id" AS "dataset_id",
            "cog"."cog_folder",
            "cog"."cog_name",
            "cog"."cog_url",
            "lab"."label_source",
            "lab"."label_quality",
            "lab"."label_type",
            "thumb"."base64img" AS "thumbnail_src"
           FROM ((("public"."dev_datasets" "ds_1"
             LEFT JOIN "public"."dev_cogs" "cog" ON (("cog"."dataset_id" = "ds_1"."id")))
             LEFT JOIN "public"."v1_labels" "lab" ON (("lab"."dataset_id" = "ds_1"."id")))
             LEFT JOIN "public"."dev_thumbnails" "thumb" ON (("thumb"."dataset_id" = "ds_1"."id")))
        )
 SELECT "ds"."id",
    "ds"."file_name",
    "ds"."file_size",
    "ds"."bbox",
    "ds"."status",
    "ds"."created_at",
    "ds"."copy_time",
    "ds"."sha256",
    "ds"."file_alias",
    "m"."dataset_id",
    "m"."user_id",
    "m"."name",
    "m"."license",
    "m"."platform",
    "m"."project_id",
    "m"."authors",
    "m"."spectral_properties",
    "m"."citation_doi",
    "m"."admin_level_1",
    "m"."admin_level_2",
    "m"."admin_level_3",
    "m"."aquisition_day",
    "m"."aquisition_month",
    "m"."aquisition_year",
    "m"."additional_information",
    "extra"."cog_folder",
    "extra"."cog_name",
    "extra"."cog_url",
    "extra"."label_source",
    "extra"."label_quality",
    "extra"."label_type",
    "extra"."thumbnail_src"
   FROM (("ds"
     LEFT JOIN "public"."dev_metadata" "m" ON (("m"."dataset_id" = "ds"."id")))
     LEFT JOIN "extra" ON (("extra"."dataset_id" = "ds"."id")));


ALTER TABLE "public"."dev_full_dataset_view" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."dev_geotiff_info" (
    "dataset_id" integer NOT NULL,
    "driver" character varying(255) NOT NULL,
    "size_width" integer NOT NULL,
    "size_height" integer NOT NULL,
    "file_size_gb" real NOT NULL,
    "crs" "text" NOT NULL,
    "crs_code" character varying(50),
    "geodetic_datum" character varying(255),
    "pixel_size_x" double precision NOT NULL,
    "pixel_size_y" double precision NOT NULL,
    "block_size_x" integer NOT NULL,
    "block_size_y" integer NOT NULL,
    "is_tiled" boolean NOT NULL,
    "compression" character varying(50),
    "interleave" character varying(50),
    "is_bigtiff" boolean NOT NULL,
    "band_count" integer NOT NULL,
    "band_types" character varying[] NOT NULL,
    "band_interpretations" character varying[] NOT NULL,
    "band_nodata_values" double precision[],
    "origin_x" double precision NOT NULL,
    "origin_y" double precision NOT NULL,
    "extra_metadata" "jsonb",
    "created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE "public"."dev_geotiff_info" OWNER TO "postgres";


COMMENT ON TABLE "public"."dev_geotiff_info" IS 'Stores detailed technical metadata about GeoTIFF files for debugging and context';



COMMENT ON COLUMN "public"."dev_geotiff_info"."dataset_id" IS 'References the main dataset record';



COMMENT ON COLUMN "public"."dev_geotiff_info"."driver" IS 'GDAL driver used for the file';



COMMENT ON COLUMN "public"."dev_geotiff_info"."crs" IS 'Complete coordinate reference system definition';



COMMENT ON COLUMN "public"."dev_geotiff_info"."extra_metadata" IS 'Additional GDAL metadata stored as JSON';



CREATE TABLE IF NOT EXISTS "public"."dev_label_objects" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "dataset_id" bigint NOT NULL,
    "file_alias" "text",
    "file_type" "text",
    "label_description" "text",
    "user_id" "uuid",
    "file_path" "text",
    "audited" boolean NOT NULL
);


ALTER TABLE "public"."dev_label_objects" OWNER TO "postgres";


ALTER TABLE "public"."dev_label_objects" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."dev_label_objects_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."dev_labels" (
    "id" bigint NOT NULL,
    "dataset_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "aoi" "jsonb",
    "label" "jsonb",
    "label_source" "public"."LabelSource" NOT NULL,
    "label_quality" smallint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "label_type" "public"."LabelType" NOT NULL
);


ALTER TABLE "public"."dev_labels" OWNER TO "postgres";


COMMENT ON TABLE "public"."dev_labels" IS 'This is a dev version of v1_labels';



ALTER TABLE "public"."dev_labels" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."dev_labels_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."dev_logs" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "level" "text",
    "message" "text",
    "origin" "text",
    "origin_line" integer,
    "user_id" "uuid",
    "dataset_id" bigint,
    "backend_version" "text"
);


ALTER TABLE "public"."dev_logs" OWNER TO "postgres";


COMMENT ON TABLE "public"."dev_logs" IS 'This is a duplicate of logs';



ALTER TABLE "public"."dev_logs" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."dev_logs_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."dev_queue" (
    "id" bigint NOT NULL,
    "dataset_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "build_args" "jsonb" DEFAULT '{}'::"jsonb" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "is_processing" boolean DEFAULT false NOT NULL,
    "priority" smallint DEFAULT '2'::smallint NOT NULL,
    "task_type" "text",
    "task_types" "text"[]
);


ALTER TABLE "public"."dev_queue" OWNER TO "postgres";


ALTER TABLE "public"."dev_queue" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."dev_queue_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE OR REPLACE VIEW "public"."dev_queue_positions" AS
 WITH "positions" AS (
         SELECT "row_number"() OVER (ORDER BY "dev_queue"."priority" DESC, "dev_queue"."created_at") AS "current_position",
            "dev_queue"."id",
            "dev_queue"."dataset_id",
            "dev_queue"."user_id",
            "dev_queue"."build_args",
            "dev_queue"."created_at",
            "dev_queue"."is_processing",
            "dev_queue"."priority",
            "dev_queue"."task_type",
            "dev_queue"."task_types"
           FROM "public"."dev_queue"
          WHERE (NOT "dev_queue"."is_processing")
          ORDER BY "dev_queue"."priority" DESC, "dev_queue"."created_at"
        ), "avg_time" AS (
         SELECT "avg"("dev_cogs"."runtime") AS "avg"
           FROM "public"."dev_cogs"
        )
 SELECT ("avg_time"."avg" * ("positions"."current_position")::double precision) AS "estimated_time",
    "positions"."current_position",
    "positions"."id",
    "positions"."dataset_id",
    "positions"."user_id",
    "positions"."build_args",
    "positions"."created_at",
    "positions"."is_processing",
    "positions"."priority",
    "positions"."task_type",
    "positions"."task_types",
    "avg_time"."avg"
   FROM "positions",
    "avg_time";


ALTER TABLE "public"."dev_queue_positions" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."labels_dev_egu" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "aoi" "json",
    "standing_deadwood" "json",
    "ortho_file_name" "text"
);


ALTER TABLE "public"."labels_dev_egu" OWNER TO "postgres";


ALTER TABLE "public"."labels_dev_egu" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."labels_dev_egu_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."logs" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "level" "text",
    "message" "text",
    "origin" "text",
    "origin_line" integer,
    "user_id" "uuid",
    "dataset_id" bigint,
    "backend_version" "text"
);


ALTER TABLE "public"."logs" OWNER TO "postgres";


COMMENT ON TABLE "public"."logs" IS 'Backend logs';



ALTER TABLE "public"."logs" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."logs_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."metadata_dev_egu" (
    "filename" "text" NOT NULL,
    "project_id" "text",
    "authors_image" "text",
    "email" "text",
    "label_type" "text",
    "label_source" "text",
    "image_platform" "text",
    "image_spectral_properties" "text",
    "citation_doi" "text",
    "label_quality" "text",
    "has_labels" boolean,
    "license" "text",
    "public" boolean,
    "acquisition_date_generated" timestamp without time zone,
    "display_filename" "text",
    "gadm_NAME_0" "text",
    "gadm_NAME_1" "text",
    "gadm_NAME_2" "text",
    "gadm_NAME_3" "text"
);


ALTER TABLE "public"."metadata_dev_egu" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."metadata_dev_egu_v2" (
    "filename" "text" NOT NULL,
    "project_id" "text",
    "authors_image" "text",
    "email" "text",
    "label_type" "text",
    "label_source" "text",
    "image_platform" "text",
    "image_spectral_properties" "text",
    "citation_doi" "text",
    "label_quality" "text",
    "has_labels" boolean,
    "license" "text",
    "public" boolean,
    "additional_information" "text",
    "acquisition_date_generated" timestamp without time zone,
    "centroid" "json",
    "display_filename" "text",
    "gadm_NAME_0" "text",
    "gadm_NAME_1" "text",
    "gadm_NAME_2" "text",
    "gadm_NAME_3" "text"
);


ALTER TABLE "public"."metadata_dev_egu_v2" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."upload_files_dev" (
    "id" bigint NOT NULL,
    "uuid" "uuid" NOT NULL,
    "user_id" "uuid" NOT NULL,
    "aquisition_date" "date" NOT NULL,
    "upload_date" timestamp without time zone NOT NULL,
    "file_name" "text" NOT NULL,
    "content_type" character varying NOT NULL,
    "file_size" bigint NOT NULL,
    "raw_path" "text" NOT NULL,
    "sha256" character varying NOT NULL,
    "platform" "public"."Platform" NOT NULL,
    "license" "public"."License" DEFAULT 'CC BY'::"public"."License" NOT NULL,
    "status" "public"."Status" DEFAULT 'pending'::"public"."Status" NOT NULL,
    "file_id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "copy_time" double precision NOT NULL,
    "compress_time" double precision,
    "bbox" "extensions"."box2d",
    "wms_source" "text",
    "processed_path" "text",
    CONSTRAINT "upload_files_sha256_check" CHECK (("length"(("sha256")::"text") = 64))
);


ALTER TABLE "public"."upload_files_dev" OWNER TO "postgres";


COMMENT ON TABLE "public"."upload_files_dev" IS 'This is a duplicate of upload_files';



COMMENT ON COLUMN "public"."upload_files_dev"."processed_path" IS 'The path on the mapserver to lcoate the preview';



CREATE OR REPLACE VIEW "public"."metadata_dev_egu_view" AS
 SELECT "upload_files_dev"."id",
    "upload_files_dev"."uuid",
    "upload_files_dev"."user_id",
    "upload_files_dev"."aquisition_date",
    "upload_files_dev"."license",
    "upload_files_dev"."platform",
    "upload_files_dev"."status",
    "upload_files_dev"."wms_source",
    "upload_files_dev"."bbox",
    "upload_files_dev"."file_id",
    "upload_files_dev"."file_name",
    "upload_files_dev"."file_size",
    "metadata_dev_egu"."project_id",
    "metadata_dev_egu"."authors_image",
    "metadata_dev_egu"."label_type",
    "metadata_dev_egu"."label_source",
    "metadata_dev_egu"."image_spectral_properties",
    "metadata_dev_egu"."citation_doi",
    "metadata_dev_egu"."label_quality",
    "metadata_dev_egu"."has_labels",
    "metadata_dev_egu"."public",
    "metadata_dev_egu"."display_filename",
    "metadata_dev_egu"."gadm_NAME_0",
    "metadata_dev_egu"."gadm_NAME_1",
    "metadata_dev_egu"."gadm_NAME_2",
    "metadata_dev_egu"."gadm_NAME_3"
   FROM (("public"."upload_files_dev"
     LEFT JOIN "public"."labels_dev_egu" ON (("upload_files_dev"."file_name" = "labels_dev_egu"."ortho_file_name")))
     LEFT JOIN "public"."metadata_dev_egu" ON (("upload_files_dev"."file_name" = "metadata_dev_egu"."filename")));


ALTER TABLE "public"."metadata_dev_egu_view" OWNER TO "postgres";


CREATE OR REPLACE VIEW "public"."metadata_dev_egu_view_v2" AS
 SELECT DISTINCT ON ("metadata_dev_egu_v2"."filename") "metadata_dev_egu_v2"."filename" AS "file_name",
    "metadata_dev_egu_v2"."project_id",
    "metadata_dev_egu_v2"."authors_image",
    "metadata_dev_egu_v2"."label_type",
    "metadata_dev_egu_v2"."label_source",
    "metadata_dev_egu_v2"."image_spectral_properties",
    "metadata_dev_egu_v2"."citation_doi",
    "metadata_dev_egu_v2"."label_quality",
    "metadata_dev_egu_v2"."has_labels",
    "metadata_dev_egu_v2"."public",
    "metadata_dev_egu_v2"."display_filename",
    "metadata_dev_egu_v2"."gadm_NAME_0",
    "metadata_dev_egu_v2"."gadm_NAME_1",
    "metadata_dev_egu_v2"."gadm_NAME_2",
    "metadata_dev_egu_v2"."gadm_NAME_3",
    "metadata_dev_egu_v2"."license",
    "metadata_dev_egu_v2"."image_platform" AS "platform",
    "metadata_dev_egu_v2"."acquisition_date_generated" AS "aquisition_date",
    "metadata_dev_egu_v2"."centroid",
    "upload_files_dev"."uuid",
    "upload_files_dev"."status",
    "upload_files_dev"."wms_source",
    "upload_files_dev"."bbox",
    "upload_files_dev"."file_id",
    "upload_files_dev"."file_size"
   FROM ("public"."metadata_dev_egu_v2"
     LEFT JOIN "public"."upload_files_dev" ON (("metadata_dev_egu_v2"."filename" = "upload_files_dev"."file_name")));


ALTER TABLE "public"."metadata_dev_egu_view_v2" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."newsletter" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "email" "text"
);


ALTER TABLE "public"."newsletter" OWNER TO "postgres";


ALTER TABLE "public"."newsletter" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."newsletter_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."presentations" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "date" "date" NOT NULL,
    "title" "text" NOT NULL,
    "event" "text" NOT NULL,
    "url" "text",
    "speaker" "text"
);


ALTER TABLE "public"."presentations" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."projects" (
    "id" "text" NOT NULL,
    "project_name" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);


ALTER TABLE "public"."projects" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."publications" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text" NOT NULL,
    "authors" "text" NOT NULL,
    "year" "text",
    "publication_date" "date",
    "publisher" "text",
    "url" "text" NOT NULL
);


ALTER TABLE "public"."publications" OWNER TO "postgres";


ALTER TABLE "public"."presentations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."publications_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."publications" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."publications_id_seq1"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."upload_files_dev" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."upload_files_dev_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."v1_cogs" (
    "dataset_id" bigint NOT NULL,
    "cog_folder" "text" NOT NULL,
    "cog_name" "text" NOT NULL,
    "cog_url" "text" NOT NULL,
    "cog_size" bigint NOT NULL,
    "runtime" double precision NOT NULL,
    "user_id" "uuid" NOT NULL,
    "compression" "text" NOT NULL,
    "overviews" integer NOT NULL,
    "resolution" integer NOT NULL,
    "blocksize" integer,
    "compression_level" "text",
    "tiling_scheme" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);


ALTER TABLE "public"."v1_cogs" OWNER TO "postgres";


CREATE OR REPLACE VIEW "public"."v1_dataset_logs" WITH ("security_invoker"='on') AS
 SELECT "logs"."dataset_id",
    "json_agg"("logs".*) AS "logs"
   FROM "public"."logs"
  GROUP BY "logs"."dataset_id";


ALTER TABLE "public"."v1_dataset_logs" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."v1_metadata" (
    "dataset_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "name" "text" NOT NULL,
    "license" "public"."License",
    "platform" "public"."Platform" NOT NULL,
    "project_id" "text",
    "authors" "text",
    "spectral_properties" "text",
    "citation_doi" "text",
    "admin_level_1" "text",
    "admin_level_2" "text",
    "admin_level_3" "text",
    "aquisition_year" smallint,
    "aquisition_month" smallint,
    "aquisition_day" smallint,
    "additional_information" "text",
    "data_access" "public"."access" DEFAULT 'public'::"public"."access" NOT NULL,
    CONSTRAINT "v1_metadata_aquisition_day_check" CHECK ((("aquisition_day" > 0) AND ("aquisition_day" < 32))),
    CONSTRAINT "v1_metadata_aquisition_month_check" CHECK ((("aquisition_month" < 13) AND ("aquisition_month" > 0))),
    CONSTRAINT "v1_metadata_aquisition_year_check" CHECK ((("aquisition_year" > 1980) AND ("aquisition_year" < 2099)))
);


ALTER TABLE "public"."v1_metadata" OWNER TO "postgres";


CREATE OR REPLACE VIEW "public"."v1_full_dataset_view" AS
 WITH "ds" AS (
         SELECT "v1_datasets"."id",
            "v1_datasets"."file_name",
            "v1_datasets"."file_size",
            "v1_datasets"."bbox",
            "v1_datasets"."status",
            "v1_datasets"."created_at",
            "v1_datasets"."copy_time",
            "v1_datasets"."sha256",
            "v1_datasets"."file_alias"
           FROM "public"."v1_datasets"
        ), "extra" AS (
         SELECT "ds_1"."id" AS "dataset_id",
            "cog"."cog_folder",
            "cog"."cog_name",
            "cog"."cog_url",
            "lab"."label_source",
            "lab"."label_quality",
            "lab"."label_type",
            "thumb"."thumbnail_path"
           FROM ((("public"."v1_datasets" "ds_1"
             LEFT JOIN "public"."v1_cogs" "cog" ON (("cog"."dataset_id" = "ds_1"."id")))
             LEFT JOIN "public"."v1_labels" "lab" ON (("lab"."dataset_id" = "ds_1"."id")))
             LEFT JOIN "public"."v1_thumbnails" "thumb" ON (("thumb"."dataset_id" = "ds_1"."id")))
        )
 SELECT "ds"."id",
    "ds"."file_name",
    "ds"."file_size",
    "ds"."bbox",
    "ds"."status",
    "ds"."created_at",
    "ds"."copy_time",
    "ds"."sha256",
    "ds"."file_alias",
    "m"."dataset_id",
    "m"."user_id",
    "m"."name",
    "m"."license",
    "m"."platform",
    "m"."project_id",
    "m"."authors",
    "m"."spectral_properties",
    "m"."citation_doi",
    "m"."admin_level_1",
    "m"."admin_level_2",
    "m"."admin_level_3",
    "m"."aquisition_day",
    "m"."aquisition_month",
    "m"."aquisition_year",
    "m"."additional_information",
    "extra"."cog_folder",
    "extra"."cog_name",
    "extra"."cog_url",
    "extra"."label_source",
    "extra"."label_quality",
    "extra"."label_type",
    "extra"."thumbnail_path"
   FROM (("ds"
     LEFT JOIN "public"."v1_metadata" "m" ON (("m"."dataset_id" = "ds"."id")))
     LEFT JOIN "extra" ON (("extra"."dataset_id" = "ds"."id")));


ALTER TABLE "public"."v1_full_dataset_view" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."v1_geotiff_info" (
    "dataset_id" integer NOT NULL,
    "driver" character varying(255) NOT NULL,
    "size_width" integer NOT NULL,
    "size_height" integer NOT NULL,
    "file_size_gb" real NOT NULL,
    "crs" "text" NOT NULL,
    "crs_code" character varying(50),
    "geodetic_datum" character varying(255),
    "pixel_size_x" double precision NOT NULL,
    "pixel_size_y" double precision NOT NULL,
    "block_size_x" integer NOT NULL,
    "block_size_y" integer NOT NULL,
    "is_tiled" boolean NOT NULL,
    "compression" character varying(50),
    "interleave" character varying(50),
    "is_bigtiff" boolean NOT NULL,
    "band_count" integer NOT NULL,
    "band_types" character varying[] NOT NULL,
    "band_interpretations" character varying[] NOT NULL,
    "band_nodata_values" double precision[],
    "origin_x" double precision NOT NULL,
    "origin_y" double precision NOT NULL,
    "extra_metadata" "jsonb",
    "created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE "public"."v1_geotiff_info" OWNER TO "postgres";


COMMENT ON TABLE "public"."v1_geotiff_info" IS 'Stores detailed technical metadata about GeoTIFF files for debugging and context';



COMMENT ON COLUMN "public"."v1_geotiff_info"."dataset_id" IS 'References the main dataset record';



COMMENT ON COLUMN "public"."v1_geotiff_info"."driver" IS 'GDAL driver used for the file';



COMMENT ON COLUMN "public"."v1_geotiff_info"."crs" IS 'Complete coordinate reference system definition';



COMMENT ON COLUMN "public"."v1_geotiff_info"."extra_metadata" IS 'Additional GDAL metadata stored as JSON';



CREATE TABLE IF NOT EXISTS "public"."v1_label_objects" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "dataset_id" bigint NOT NULL,
    "file_alias" "text",
    "file_type" "text",
    "label_description" "text",
    "user_id" "uuid",
    "file_path" "text",
    "audited" boolean NOT NULL
);


ALTER TABLE "public"."v1_label_objects" OWNER TO "postgres";


ALTER TABLE "public"."v1_label_objects" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."v1_label_objects_duplicate_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."v1_labels" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."v1_labels_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."v1_queue" (
    "id" bigint NOT NULL,
    "dataset_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "build_args" "jsonb" DEFAULT '{}'::"jsonb" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "is_processing" boolean DEFAULT false NOT NULL,
    "priority" smallint DEFAULT '2'::smallint NOT NULL,
    "task_type" "text"
);


ALTER TABLE "public"."v1_queue" OWNER TO "postgres";


ALTER TABLE "public"."v1_queue" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."v1_queue_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE OR REPLACE VIEW "public"."v1_queue_positions" AS
 WITH "positions" AS (
         SELECT "row_number"() OVER (ORDER BY "v1_queue"."priority" DESC, "v1_queue"."created_at") AS "current_position",
            "v1_queue"."id",
            "v1_queue"."dataset_id",
            "v1_queue"."user_id",
            "v1_queue"."build_args",
            "v1_queue"."created_at",
            "v1_queue"."is_processing",
            "v1_queue"."priority",
            "v1_queue"."task_type"
           FROM "public"."v1_queue"
          WHERE (NOT "v1_queue"."is_processing")
          ORDER BY "v1_queue"."priority" DESC, "v1_queue"."created_at"
        ), "avg_time" AS (
         SELECT "avg"("v1_cogs"."runtime") AS "avg"
           FROM "public"."v1_cogs"
        )
 SELECT ("avg_time"."avg" * ("positions"."current_position")::double precision) AS "estimated_time",
    "positions"."current_position",
    "positions"."id",
    "positions"."dataset_id",
    "positions"."user_id",
    "positions"."build_args",
    "positions"."created_at",
    "positions"."is_processing",
    "positions"."priority",
    "positions"."task_type",
    "avg_time"."avg"
   FROM "positions",
    "avg_time";


ALTER TABLE "public"."v1_queue_positions" OWNER TO "postgres";


ALTER TABLE ONLY "public"."v1_thumbnails" ALTER COLUMN "dataset_id" SET DEFAULT "nextval"('"public"."v1_thumbnails_dataset_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."collaborators"
    ADD CONSTRAINT "collaborators_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."database_stats"
    ADD CONSTRAINT "database_stats_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."v1_datasets"
    ADD CONSTRAINT "datasets_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."deadtrees_logs"
    ADD CONSTRAINT "deadtrees_logs_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."dev_cogs"
    ADD CONSTRAINT "dev_cogs_pkey" PRIMARY KEY ("dataset_id", "cog_folder", "cog_name");



ALTER TABLE ONLY "public"."dev_datasets"
    ADD CONSTRAINT "dev_datasets_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."dev_geotiff_info"
    ADD CONSTRAINT "dev_geotiff_info_pkey" PRIMARY KEY ("dataset_id");



ALTER TABLE ONLY "public"."dev_label_objects"
    ADD CONSTRAINT "dev_label_objects_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."dev_labels"
    ADD CONSTRAINT "dev_labels_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."dev_logs"
    ADD CONSTRAINT "dev_logs_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."dev_metadata"
    ADD CONSTRAINT "dev_metadata_pkey" PRIMARY KEY ("dataset_id");



ALTER TABLE ONLY "public"."dev_queue"
    ADD CONSTRAINT "dev_queue_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."dev_thumbnails"
    ADD CONSTRAINT "dev_thumbnails_pkey" PRIMARY KEY ("dataset_id");



ALTER TABLE ONLY "public"."labels_dev_egu"
    ADD CONSTRAINT "labels_dev_egu_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."logs"
    ADD CONSTRAINT "logs_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."metadata_dev_egu"
    ADD CONSTRAINT "metadata_dev_egu_pkey" PRIMARY KEY ("filename");



ALTER TABLE ONLY "public"."metadata_dev_egu_v2"
    ADD CONSTRAINT "metadata_dev_egu_v2_pkey" PRIMARY KEY ("filename");



ALTER TABLE ONLY "public"."newsletter"
    ADD CONSTRAINT "newsletter_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."projects"
    ADD CONSTRAINT "projects_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."presentations"
    ADD CONSTRAINT "publications_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."publications"
    ADD CONSTRAINT "publications_pkey1" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."upload_files_dev"
    ADD CONSTRAINT "upload_files_dev_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."upload_files_dev"
    ADD CONSTRAINT "upload_files_dev_uuid_key" UNIQUE ("uuid");



ALTER TABLE ONLY "public"."v1_cogs"
    ADD CONSTRAINT "v1_cogs_pkey" PRIMARY KEY ("dataset_id", "cog_folder", "cog_name");



ALTER TABLE ONLY "public"."v1_geotiff_info"
    ADD CONSTRAINT "v1_geotiff_info_pkey" PRIMARY KEY ("dataset_id");



ALTER TABLE ONLY "public"."v1_label_objects"
    ADD CONSTRAINT "v1_label_objects_duplicate_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."v1_labels"
    ADD CONSTRAINT "v1_labels_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."v1_metadata"
    ADD CONSTRAINT "v1_metadata_pkey" PRIMARY KEY ("dataset_id");



ALTER TABLE ONLY "public"."v1_queue"
    ADD CONSTRAINT "v1_queue_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."v1_thumbnails"
    ADD CONSTRAINT "v1_thumbnails_pkey" PRIMARY KEY ("dataset_id");



CREATE INDEX "idx_dev_geotiff_info_created_at" ON "public"."dev_geotiff_info" USING "btree" ("created_at");



CREATE INDEX "idx_v1_geotiff_info_created_at" ON "public"."v1_geotiff_info" USING "btree" ("created_at");



CREATE INDEX "labels_dev_egu_ortho_file_name_idx" ON "public"."labels_dev_egu" USING "btree" ("ortho_file_name");



CREATE INDEX "upload_files_dev_file_name_idx" ON "public"."upload_files_dev" USING "btree" ("file_name");



ALTER TABLE ONLY "public"."v1_cogs"
    ADD CONSTRAINT "cogs_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."v1_datasets"
    ADD CONSTRAINT "datasets_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."dev_cogs"
    ADD CONSTRAINT "dev_cogs_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."dev_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."dev_cogs"
    ADD CONSTRAINT "dev_cogs_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."dev_datasets"
    ADD CONSTRAINT "dev_datasets_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."dev_geotiff_info"
    ADD CONSTRAINT "dev_geotiff_info_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."dev_datasets"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."dev_label_objects"
    ADD CONSTRAINT "dev_label_objects_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."dev_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."dev_label_objects"
    ADD CONSTRAINT "dev_label_objects_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."dev_labels"
    ADD CONSTRAINT "dev_labels_dataset_id_fkey1" FOREIGN KEY ("dataset_id") REFERENCES "public"."dev_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."dev_labels"
    ADD CONSTRAINT "dev_labels_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."dev_logs"
    ADD CONSTRAINT "dev_logs_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE SET NULL;



ALTER TABLE ONLY "public"."dev_metadata"
    ADD CONSTRAINT "dev_metadata_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."dev_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."dev_metadata"
    ADD CONSTRAINT "dev_metadata_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."dev_queue"
    ADD CONSTRAINT "dev_queue_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."dev_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."dev_queue"
    ADD CONSTRAINT "dev_queue_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."dev_thumbnails"
    ADD CONSTRAINT "dev_thumbnails_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."dev_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."dev_thumbnails"
    ADD CONSTRAINT "dev_thumbnails_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."logs"
    ADD CONSTRAINT "public_logs_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE SET NULL;



ALTER TABLE ONLY "public"."upload_files_dev"
    ADD CONSTRAINT "public_upload_files_dev_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."v1_cogs"
    ADD CONSTRAINT "v1_cogs_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."v1_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."v1_geotiff_info"
    ADD CONSTRAINT "v1_geotiff_info_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."v1_datasets"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."v1_label_objects"
    ADD CONSTRAINT "v1_label_objects_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."v1_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."v1_label_objects"
    ADD CONSTRAINT "v1_label_objects_duplicate_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."v1_labels"
    ADD CONSTRAINT "v1_labels_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."v1_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."v1_labels"
    ADD CONSTRAINT "v1_labels_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."v1_metadata"
    ADD CONSTRAINT "v1_metadata_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."v1_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."v1_metadata"
    ADD CONSTRAINT "v1_metadata_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."v1_queue"
    ADD CONSTRAINT "v1_queue_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."v1_datasets"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."v1_queue"
    ADD CONSTRAINT "v1_queue_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."v1_thumbnails"
    ADD CONSTRAINT "v1_thumbnails_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;



CREATE POLICY "Allow user to insert a new entry" ON "public"."v1_cogs" FOR INSERT WITH CHECK (((( SELECT "auth"."uid"() AS "uid") = "user_id") OR ((( SELECT "auth"."jwt"() AS "jwt") ->> 'email'::"text") = 'processor@deadtrees.earth'::"text")));



CREATE POLICY "Enable all for users based on user_id" ON "public"."v1_datasets" USING (((( SELECT "auth"."uid"() AS "uid") = "user_id") OR ((( SELECT "auth"."jwt"() AS "jwt") ->> 'email'::"text") = 'processor@deadtrees.earth'::"text")));



CREATE POLICY "Enable all only for processor users" ON "public"."v1_queue" USING (((( SELECT "auth"."jwt"() AS "jwt") ->> 'email'::"text") = 'processor@deadtrees.earth'::"text")) WITH CHECK (((( SELECT "auth"."jwt"() AS "jwt") ->> 'email'::"text") = 'processor@deadtrees.earth'::"text"));



CREATE POLICY "Enable edit for users based on user_id" ON "public"."v1_metadata" USING ((( SELECT "auth"."uid"() AS "uid") = "user_id"));



CREATE POLICY "Enable insert for authenticated users only" ON "public"."dev_datasets" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."dev_label_objects" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."dev_labels" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."dev_logs" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."logs" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."upload_files_dev" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."v1_datasets" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."v1_label_objects" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."v1_labels" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."v1_metadata" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."v1_queue" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."v1_thumbnails" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable read access for all users" ON "public"."dev_datasets" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."dev_label_objects" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."dev_labels" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."presentations" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."publications" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."upload_files_dev" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."v1_cogs" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."v1_datasets" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."v1_label_objects" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."v1_labels" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."v1_metadata" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."v1_queue" FOR SELECT TO "authenticated" USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."v1_thumbnails" FOR SELECT USING (true);



CREATE POLICY "Enable read access for authenticated users only" ON "public"."dev_logs" FOR SELECT TO "authenticated", "anon" USING (true);



CREATE POLICY "Enable read for authenticated users only" ON "public"."logs" FOR SELECT TO "authenticated" USING (true);



CREATE POLICY "Enable update for admins (all) and authenticated (owned)" ON "public"."upload_files_dev" FOR UPDATE TO "authenticated" USING ((("right"(("auth"."jwt"() ->> 'email'::"text"), 16) = '@deadtrees.earth'::"text") OR ("auth"."uid"() = "user_id"))) WITH CHECK ((("right"(("auth"."jwt"() ->> 'email'::"text"), 16) = '@deadtrees.earth'::"text") OR ("auth"."uid"() = "user_id")));



CREATE POLICY "allow owner and processor to update a entry" ON "public"."v1_cogs" FOR UPDATE USING (((( SELECT "auth"."uid"() AS "uid") = "user_id") OR ((( SELECT "auth"."jwt"() AS "jwt") ->> 'email'::"text") = 'processor@deadtrees.earth'::"text")));



ALTER TABLE "public"."dev_datasets" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."dev_label_objects" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."dev_labels" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "enable all for processor" ON "public"."dev_datasets" USING (((( SELECT "auth"."uid"() AS "uid") = "user_id") OR ((( SELECT "auth"."jwt"() AS "jwt") ->> 'email'::"text") = 'processor@deadtrees.earth'::"text"))) WITH CHECK (true);



CREATE POLICY "enable processor to update" ON "public"."v1_thumbnails" FOR UPDATE USING (((( SELECT "auth"."uid"() AS "uid") = "user_id") OR ((( SELECT "auth"."jwt"() AS "jwt") ->> 'email'::"text") = 'processor@deadtrees.earth'::"text"))) WITH CHECK (((( SELECT "auth"."uid"() AS "uid") = "user_id") OR ((( SELECT "auth"."jwt"() AS "jwt") ->> 'email'::"text") = 'processor@deadtrees.earth'::"text")));



ALTER TABLE "public"."metadata_dev_egu" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."presentations" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."projects" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."publications" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."upload_files_dev" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."v1_cogs" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."v1_datasets" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."v1_label_objects" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."v1_labels" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."v1_metadata" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."v1_queue" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."v1_thumbnails" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."dev_datasets";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."dev_metadata";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."upload_files_dev";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."v1_datasets";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."v1_metadata";






GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































GRANT ALL ON TABLE "public"."collaborators" TO "anon";
GRANT ALL ON TABLE "public"."collaborators" TO "authenticated";
GRANT ALL ON TABLE "public"."collaborators" TO "service_role";



GRANT ALL ON SEQUENCE "public"."collaborators_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."collaborators_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."collaborators_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."database_stats" TO "anon";
GRANT ALL ON TABLE "public"."database_stats" TO "authenticated";
GRANT ALL ON TABLE "public"."database_stats" TO "service_role";



GRANT ALL ON SEQUENCE "public"."database_stats_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."database_stats_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."database_stats_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."v1_datasets" TO "anon";
GRANT ALL ON TABLE "public"."v1_datasets" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_datasets" TO "service_role";



GRANT ALL ON SEQUENCE "public"."datasets_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."datasets_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."datasets_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."deadtrees_logs" TO "anon";
GRANT ALL ON TABLE "public"."deadtrees_logs" TO "authenticated";
GRANT ALL ON TABLE "public"."deadtrees_logs" TO "service_role";



GRANT ALL ON SEQUENCE "public"."deadtrees_logs_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."deadtrees_logs_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."deadtrees_logs_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."dev_cogs" TO "anon";
GRANT ALL ON TABLE "public"."dev_cogs" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_cogs" TO "service_role";



GRANT ALL ON TABLE "public"."dev_datasets" TO "anon";
GRANT ALL ON TABLE "public"."dev_datasets" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_datasets" TO "service_role";



GRANT ALL ON SEQUENCE "public"."dev_datasets_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."dev_datasets_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."dev_datasets_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."dev_metadata" TO "anon";
GRANT ALL ON TABLE "public"."dev_metadata" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_metadata" TO "service_role";



GRANT ALL ON TABLE "public"."v1_thumbnails" TO "anon";
GRANT ALL ON TABLE "public"."v1_thumbnails" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_thumbnails" TO "service_role";



GRANT ALL ON SEQUENCE "public"."v1_thumbnails_dataset_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."v1_thumbnails_dataset_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."v1_thumbnails_dataset_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."dev_thumbnails" TO "anon";
GRANT ALL ON TABLE "public"."dev_thumbnails" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_thumbnails" TO "service_role";



GRANT ALL ON TABLE "public"."v1_labels" TO "anon";
GRANT ALL ON TABLE "public"."v1_labels" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_labels" TO "service_role";



GRANT ALL ON TABLE "public"."dev_full_dataset_view" TO "anon";
GRANT ALL ON TABLE "public"."dev_full_dataset_view" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_full_dataset_view" TO "service_role";



GRANT ALL ON TABLE "public"."dev_geotiff_info" TO "anon";
GRANT ALL ON TABLE "public"."dev_geotiff_info" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_geotiff_info" TO "service_role";



GRANT ALL ON TABLE "public"."dev_label_objects" TO "anon";
GRANT ALL ON TABLE "public"."dev_label_objects" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_label_objects" TO "service_role";



GRANT ALL ON SEQUENCE "public"."dev_label_objects_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."dev_label_objects_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."dev_label_objects_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."dev_labels" TO "anon";
GRANT ALL ON TABLE "public"."dev_labels" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_labels" TO "service_role";



GRANT ALL ON SEQUENCE "public"."dev_labels_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."dev_labels_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."dev_labels_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."dev_logs" TO "anon";
GRANT ALL ON TABLE "public"."dev_logs" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_logs" TO "service_role";



GRANT ALL ON SEQUENCE "public"."dev_logs_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."dev_logs_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."dev_logs_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."dev_queue" TO "anon";
GRANT ALL ON TABLE "public"."dev_queue" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_queue" TO "service_role";



GRANT ALL ON SEQUENCE "public"."dev_queue_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."dev_queue_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."dev_queue_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."dev_queue_positions" TO "anon";
GRANT ALL ON TABLE "public"."dev_queue_positions" TO "authenticated";
GRANT ALL ON TABLE "public"."dev_queue_positions" TO "service_role";



GRANT ALL ON TABLE "public"."labels_dev_egu" TO "anon";
GRANT ALL ON TABLE "public"."labels_dev_egu" TO "authenticated";
GRANT ALL ON TABLE "public"."labels_dev_egu" TO "service_role";



GRANT ALL ON SEQUENCE "public"."labels_dev_egu_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."labels_dev_egu_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."labels_dev_egu_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."logs" TO "anon";
GRANT ALL ON TABLE "public"."logs" TO "authenticated";
GRANT ALL ON TABLE "public"."logs" TO "service_role";



GRANT ALL ON SEQUENCE "public"."logs_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."logs_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."logs_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."metadata_dev_egu" TO "anon";
GRANT ALL ON TABLE "public"."metadata_dev_egu" TO "authenticated";
GRANT ALL ON TABLE "public"."metadata_dev_egu" TO "service_role";



GRANT ALL ON TABLE "public"."metadata_dev_egu_v2" TO "anon";
GRANT ALL ON TABLE "public"."metadata_dev_egu_v2" TO "authenticated";
GRANT ALL ON TABLE "public"."metadata_dev_egu_v2" TO "service_role";



GRANT ALL ON TABLE "public"."upload_files_dev" TO "anon";
GRANT ALL ON TABLE "public"."upload_files_dev" TO "authenticated";
GRANT ALL ON TABLE "public"."upload_files_dev" TO "service_role";



GRANT ALL ON TABLE "public"."metadata_dev_egu_view" TO "anon";
GRANT ALL ON TABLE "public"."metadata_dev_egu_view" TO "authenticated";
GRANT ALL ON TABLE "public"."metadata_dev_egu_view" TO "service_role";



GRANT ALL ON TABLE "public"."metadata_dev_egu_view_v2" TO "anon";
GRANT ALL ON TABLE "public"."metadata_dev_egu_view_v2" TO "authenticated";
GRANT ALL ON TABLE "public"."metadata_dev_egu_view_v2" TO "service_role";



GRANT ALL ON TABLE "public"."newsletter" TO "anon";
GRANT ALL ON TABLE "public"."newsletter" TO "authenticated";
GRANT ALL ON TABLE "public"."newsletter" TO "service_role";



GRANT ALL ON SEQUENCE "public"."newsletter_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."newsletter_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."newsletter_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."presentations" TO "anon";
GRANT ALL ON TABLE "public"."presentations" TO "authenticated";
GRANT ALL ON TABLE "public"."presentations" TO "service_role";



GRANT ALL ON TABLE "public"."projects" TO "anon";
GRANT ALL ON TABLE "public"."projects" TO "authenticated";
GRANT ALL ON TABLE "public"."projects" TO "service_role";



GRANT ALL ON TABLE "public"."publications" TO "anon";
GRANT ALL ON TABLE "public"."publications" TO "authenticated";
GRANT ALL ON TABLE "public"."publications" TO "service_role";



GRANT ALL ON SEQUENCE "public"."publications_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."publications_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."publications_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."publications_id_seq1" TO "anon";
GRANT ALL ON SEQUENCE "public"."publications_id_seq1" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."publications_id_seq1" TO "service_role";



GRANT ALL ON SEQUENCE "public"."upload_files_dev_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."upload_files_dev_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."upload_files_dev_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."v1_cogs" TO "anon";
GRANT ALL ON TABLE "public"."v1_cogs" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_cogs" TO "service_role";



GRANT ALL ON TABLE "public"."v1_dataset_logs" TO "anon";
GRANT ALL ON TABLE "public"."v1_dataset_logs" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_dataset_logs" TO "service_role";



GRANT ALL ON TABLE "public"."v1_metadata" TO "anon";
GRANT ALL ON TABLE "public"."v1_metadata" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_metadata" TO "service_role";



GRANT ALL ON TABLE "public"."v1_full_dataset_view" TO "anon";
GRANT ALL ON TABLE "public"."v1_full_dataset_view" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_full_dataset_view" TO "service_role";



GRANT ALL ON TABLE "public"."v1_geotiff_info" TO "anon";
GRANT ALL ON TABLE "public"."v1_geotiff_info" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_geotiff_info" TO "service_role";



GRANT ALL ON TABLE "public"."v1_label_objects" TO "anon";
GRANT ALL ON TABLE "public"."v1_label_objects" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_label_objects" TO "service_role";



GRANT ALL ON SEQUENCE "public"."v1_label_objects_duplicate_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."v1_label_objects_duplicate_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."v1_label_objects_duplicate_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."v1_labels_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."v1_labels_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."v1_labels_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."v1_queue" TO "anon";
GRANT ALL ON TABLE "public"."v1_queue" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_queue" TO "service_role";



GRANT ALL ON SEQUENCE "public"."v1_queue_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."v1_queue_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."v1_queue_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."v1_queue_positions" TO "anon";
GRANT ALL ON TABLE "public"."v1_queue_positions" TO "authenticated";
GRANT ALL ON TABLE "public"."v1_queue_positions" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
