services:
  processor-test:
    build:
      context: .
      dockerfile: processor/Dockerfile
    # healthcheck:
    #   test: curl --fail http://127.0.0.1:5678/ || exit 1
    #   interval: 15s
    #   timeout: 1s
    #   retries: 5
    #   start_period: 2s
    ports:
      - '5678:5678'
    volumes:
      - ./data:/data
      - ${SSH_PRIVATE_KEY_PATH}:/app/ssh_key
      - ./processor:/app/processor
      - ./shared:/app/shared
      - ./assets:/app/assets
    environment:
      - PYTHONPATH=/app
      - PYTEST_ADDOPTS=--color=yes
      - STORAGE_SERVER_IP=data.deadtrees.earth
      - STORAGE_SERVER_USERNAME=${STORAGE_SERVER_USERNAME}
      - STORAGE_SERVER_DATA_PATH=/apps/storage-server/production
      - PROCESSOR_USERNAME=processor@deadtrees.earth
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - BASE_DIR=/data
      - PROCESSOR_PASSWORD=${PROCESSOR_PASSWORD}
      - SSH_PRIVATE_KEY_PASSPHRASE=${SSH_PRIVATE_KEY_PASSPHRASE}
      - DEV_MODE=true
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN}

  api-test:
    build:
      context: .
      dockerfile: api/Dockerfile
    healthcheck:
      test: curl --fail http://127.0.0.1:5679/ || exit 1
      interval: 15s
      timeout: 1s
      retries: 5
      start_period: 2s
    ports:
      - '5679:5679'
    volumes:
      - ./data:/data
      - ./api:/app/api # dev only, no rebuild needed
      - ./shared:/app/shared # dev only, no rebuild needed
      - ./assets:/app/assets
    environment:
      - PYTHONPATH=/app
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=5679
      - PYTEST_ADDOPTS=--color=yes
      - STORAGE_SERVER_IP=data.deadtrees.earth
      - STORAGE_SERVER_USERNAME=${STORAGE_SERVER_USERNAME}
      - STORAGE_SERVER_DATA_PATH=/apps/storage-server/production
      - PROCESSOR_USERNAME=processor@deadtrees.earth
      - PROCESSOR_PASSWORD=${PROCESSOR_PASSWORD}
      - SSH_PRIVATE_KEY_PASSPHRASE=${SSH_PRIVATE_KEY_PASSPHRASE}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - BASE_DIR=/data
      - DEV_MODE=true
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN}

  nginx:
    image: nginx
    ports:
      - 8080:80 # for local and testing we do not bind to port 80 and 443
    links:
      - api-test
    depends_on:
      api-test:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'service', 'nginx', 'status']
      interval: 15s
      timeout: 2s
      retries: 5
      start_period: 3s
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d/:ro
      - ./data:/data/:ro

  tests:
    build:
      context: .
      dockerfile: tests/Dockerfile
    links:
      - nginx
      - api-test
    depends_on:
      nginx:
        condition: service_healthy
    environment:
      COG_URL: http://nginx:80/cogs/v1
    volumes:
      - ./data:/app/tests/data/
      - ./assets:/app/assets/:ro
      - ./tests:/app/tests # dev only, no rebuild needed
    command: pytest -s test_performance.py
    # command: tail -f /dev/null # Keeps container running indefinitely
